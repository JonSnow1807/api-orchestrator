version: '3.8'

services:
  api-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: api-orchestrator-dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:pass@postgres:5432/api_orchestrator
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - dev-network
    command: python -m uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:15-alpine
    container_name: api-orchestrator-postgres-dev
    environment:
      - POSTGRES_DB=api_orchestrator
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - dev-network
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: api-orchestrator-redis-dev
    networks:
      - dev-network
    ports:
      - "6379:6379"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: api-orchestrator-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dev-network
    command: npm run dev

networks:
  dev-network:
    driver: bridge

volumes:
  postgres-dev-data:
    driver: local
