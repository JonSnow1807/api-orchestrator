{"version":3,"file":"ProjectDetails-oH-kPHL3.js","sources":["../../src/components/ProjectDetails.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getApiUrl, getWebSocketURL } from '../config';\nimport axios from 'axios';\nimport AIAnalysis from './AIAnalysis';\nimport MockServerManager from './MockServerManager';\nimport { \n  ArrowLeft,\n  Folder,\n  PlayCircle,\n  Download,\n  Activity,\n  FileCode,\n  TestTube,\n  Brain,\n  Server,\n  CheckCircle,\n  XCircle,\n  Clock,\n  MoreVertical,\n  Loader,\n  Terminal,\n  Shield,\n  TrendingUp\n} from 'lucide-react';\n\nconst ProjectDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const wsRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  \n  const [project, setProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [orchestrating, setOrchestrating] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [wsConnected, setWsConnected] = useState(false);\n  const [orchestrationProgress, setOrchestrationProgress] = useState({\n    discovery: { status: 'pending', count: 0 },\n    spec: { status: 'pending', count: 0 },\n    test: { status: 'pending', count: 0 },\n    ai: { status: 'pending', count: 0 },\n    mock: { status: 'pending', count: 0 }\n  });\n\n  useEffect(() => {\n    fetchProject();\n    connectWebSocket();\n    \n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const fetchProject = async () => {\n    try {\n      const response = await axios.get(getApiUrl(`/api/projects/${id}`));\n      setProject(response.data);\n      \n      // Check if there's an active task\n      if (response.data.tasks && response.data.tasks.length > 0) {\n        const latestTask = response.data.tasks[response.data.tasks.length - 1];\n        if (latestTask.status === 'running') {\n          setOrchestrating(true);\n          setCurrentTask(latestTask);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to fetch project:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket(getWebSocketURL());\n      \n      ws.onopen = () => {\n        setWsConnected(true);\n        addMessage('Connected to orchestration server', 'success');\n      };\n      \n      ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (err) {\n          console.error('Failed to parse WebSocket message:', err);\n        }\n      };\n      \n      ws.onclose = () => {\n        setWsConnected(false);\n        addMessage('Disconnected from server', 'error');\n        // Attempt to reconnect after 3 seconds\n        setTimeout(() => {\n          if (!wsRef.current || wsRef.current.readyState === WebSocket.CLOSED) {\n            connectWebSocket();\n          }\n        }, 3000);\n      };\n      \n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        addMessage('Connection error', 'error');\n      };\n      \n      wsRef.current = ws;\n    } catch (err) {\n      console.error('Failed to connect WebSocket:', err);\n      setWsConnected(false);\n    }\n  };\n\n  const handleWebSocketMessage = (data) => {\n    // Only process messages for this project\n    if (data.project_id && data.project_id !== parseInt(id)) {\n      return;\n    }\n\n    switch(data.type) {\n      case 'progress':\n        addMessage(data.message, 'info');\n        updateAgentStatus(data.stage, 'active');\n        break;\n        \n      case 'discovery_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          discovery: { status: 'completed', count: data.apis_found }\n        }));\n        addMessage(`Discovery complete: ${data.apis_found} APIs found`, 'discovery');\n        break;\n        \n      case 'spec_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          spec: { status: 'completed', count: data.paths }\n        }));\n        addMessage(`Spec generation complete: ${data.paths} paths`, 'spec');\n        break;\n        \n      case 'tests_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          test: { status: 'completed', count: data.tests_generated }\n        }));\n        addMessage(`Test generation complete: ${data.tests_generated} tests`, 'test');\n        break;\n        \n      case 'ai_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          ai: { status: 'completed', count: 1 }\n        }));\n        addMessage('AI analysis complete', 'ai');\n        break;\n        \n      case 'mock_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          mock: { status: 'completed', count: 1 }\n        }));\n        addMessage('Mock server ready', 'mock');\n        break;\n        \n      case 'orchestration_complete':\n        setOrchestrating(false);\n        setCurrentTask(null);\n        addMessage('âœ¨ Orchestration complete!', 'success');\n        fetchProject(); // Refresh project data\n        break;\n        \n      case 'error':\n        addMessage(`Error: ${data.error}`, 'error');\n        break;\n    }\n  };\n\n  const updateAgentStatus = (stage, status) => {\n    const agentMap = {\n      'discovery': 'discovery',\n      'spec_generation': 'spec',\n      'test_generation': 'test',\n      'ai_analysis': 'ai',\n      'mock_server': 'mock'\n    };\n    \n    const agent = agentMap[stage];\n    if (agent) {\n      setOrchestrationProgress(prev => ({\n        ...prev,\n        [agent]: { ...prev[agent], status: 'active' }\n      }));\n    }\n  };\n\n  const addMessage = (text, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    setMessages(prev => [...prev, { text, type, timestamp }]);\n  };\n\n  const startOrchestration = async () => {\n    try {\n      setOrchestrating(true);\n      setMessages([]);\n      setOrchestrationProgress({\n        discovery: { status: 'pending', count: 0 },\n        spec: { status: 'pending', count: 0 },\n        test: { status: 'pending', count: 0 },\n        ai: { status: 'pending', count: 0 },\n        mock: { status: 'pending', count: 0 }\n      });\n      \n      const response = await axios.post(getApiUrl(`/api/projects/${id}/orchestrate`));\n      setCurrentTask(response.data);\n      addMessage(`Orchestration started: Task ${response.data.task_id}`, 'info');\n    } catch (error) {\n      addMessage(`Failed to start orchestration: ${error.message}`, 'error');\n      setOrchestrating(false);\n    }\n  };\n\n  const downloadArtifact = async (format) => {\n    try {\n      const response = await axios.get(getApiUrl(`/api/export/${currentTask?.task_id || project.tasks[0]?.task_id}?format=${format}`), {\n        responseType: format === 'zip' ? 'blob' : 'json'\n      });\n      \n      if (format === 'zip') {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `${project.name}-artifacts.zip`);\n        document.body.appendChild(link);\n        link.click();\n      } else {\n        const dataStr = JSON.stringify(response.data, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n        const link = document.createElement('a');\n        link.setAttribute('href', dataUri);\n        link.setAttribute('download', `${project.name}-${format}.json`);\n        link.click();\n      }\n    } catch (error) {\n      addMessage(`Download failed: ${error.message}`, 'error');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <Loader className=\"w-8 h-8 text-purple-600 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <div className=\"text-center\">\n          <XCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-white mb-2\">Project Not Found</h2>\n          <button\n            onClick={() => navigate('/dashboard')}\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition\"\n          >\n            Back to Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const agents = [\n    { \n      id: 'discovery', \n      name: 'Discovery Agent', \n      icon: FileCode,\n      description: 'Scanning for API endpoints',\n      status: orchestrationProgress.discovery.status,\n      count: orchestrationProgress.discovery.count\n    },\n    { \n      id: 'spec', \n      name: 'Spec Generator', \n      icon: FileCode,\n      description: 'Creating OpenAPI specs',\n      status: orchestrationProgress.spec.status,\n      count: orchestrationProgress.spec.count\n    },\n    { \n      id: 'test', \n      name: 'Test Generator', \n      icon: TestTube,\n      description: 'Generating test suites',\n      status: orchestrationProgress.test.status,\n      count: orchestrationProgress.test.count\n    },\n    { \n      id: 'ai', \n      name: 'AI Analyzer', \n      icon: Brain,\n      description: 'AI-powered insights',\n      status: orchestrationProgress.ai.status,\n      count: orchestrationProgress.ai.count\n    },\n    { \n      id: 'mock', \n      name: 'Mock Server', \n      icon: Server,\n      description: 'Creating mock server',\n      status: orchestrationProgress.mock.status,\n      count: orchestrationProgress.mock.count\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-900\">\n      {/* Header */}\n      <header className=\"bg-gray-800/50 backdrop-blur-lg border-b border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/dashboard')}\n                className=\"flex items-center space-x-2 text-gray-400 hover:text-white transition\"\n              >\n                <ArrowLeft className=\"w-5 h-5\" />\n                <span>Back to Dashboard</span>\n              </button>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Folder className=\"w-6 h-6 text-purple-500\" />\n                <h1 className=\"text-xl font-semibold text-white\">{project.name}</h1>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              {/* WebSocket Status */}\n              <div className={`flex items-center space-x-2 px-3 py-1 rounded-full ${\n                wsConnected \n                  ? 'bg-green-500/20 text-green-400 border border-green-500/50'\n                  : 'bg-red-500/20 text-red-400 border border-red-500/50'\n              }`}>\n                <Activity className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{wsConnected ? 'Connected' : 'Disconnected'}</span>\n              </div>\n\n              {/* Actions */}\n              <button\n                onClick={startOrchestration}\n                disabled={orchestrating}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {orchestrating ? (\n                  <>\n                    <Loader className=\"w-5 h-5 animate-spin\" />\n                    <span>Orchestrating...</span>\n                  </>\n                ) : (\n                  <>\n                    <PlayCircle className=\"w-5 h-5\" />\n                    <span>Start Orchestration</span>\n                  </>\n                )}\n              </button>\n\n              <button className=\"p-2 text-gray-400 hover:text-white\">\n                <MoreVertical className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Tabs */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"border-b border-gray-700\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {['overview', 'agents', 'ai-analysis', 'mock-server', 'console', 'artifacts'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm capitalize transition ${\n                  activeTab === tab\n                    ? 'border-purple-500 text-purple-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-300 hover:border-gray-300'\n                }`}\n              >\n                {tab}\n              </button>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8\">\n        {activeTab === 'overview' && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Project Info */}\n            <div className=\"lg:col-span-2 bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n              <h2 className=\"text-lg font-semibold text-white mb-4\">Project Information</h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">Description</label>\n                  <p className=\"text-white\">{project.description || 'No description provided'}</p>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm text-gray-400\">Source Type</label>\n                    <p className=\"text-white capitalize\">{project.source_type || 'Not specified'}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm text-gray-400\">Created</label>\n                    <p className=\"text-white\">{new Date(project.created_at).toLocaleDateString()}</p>\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"text-sm text-gray-400\">Source Path</label>\n                  <p className=\"text-white font-mono text-sm bg-gray-900 p-2 rounded\">\n                    {project.source_path || 'Not configured'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Stats */}\n            <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n              <h2 className=\"text-lg font-semibold text-white mb-4\">Statistics</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">APIs Found</span>\n                  <span className=\"text-2xl font-bold text-purple-400\">\n                    {project.api_count || 0}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Tests Generated</span>\n                  <span className=\"text-2xl font-bold text-blue-400\">\n                    {project.test_count || 0}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Security Score</span>\n                  <span className=\"text-2xl font-bold text-green-400\">\n                    {project.security_score || 'N/A'}%\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Tasks Run</span>\n                  <span className=\"text-2xl font-bold text-yellow-400\">\n                    {project.task_count || 0}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'agents' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {agents.map((agent) => {\n              const Icon = agent.icon;\n              const isActive = agent.status === 'active';\n              const isCompleted = agent.status === 'completed';\n              \n              return (\n                <div\n                  key={agent.id}\n                  className={`bg-gray-800/50 backdrop-blur rounded-xl border p-6 transition ${\n                    isActive \n                      ? 'border-purple-500 shadow-lg shadow-purple-500/20' \n                      : isCompleted\n                      ? 'border-green-500/50'\n                      : 'border-gray-700'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`p-2 rounded-lg ${\n                        isActive \n                          ? 'bg-purple-600/20' \n                          : isCompleted\n                          ? 'bg-green-600/20'\n                          : 'bg-gray-700'\n                      }`}>\n                        <Icon className={`w-6 h-6 ${\n                          isActive \n                            ? 'text-purple-400' \n                            : isCompleted\n                            ? 'text-green-400'\n                            : 'text-gray-400'\n                        }`} />\n                      </div>\n                      <div>\n                        <h3 className=\"text-white font-medium\">{agent.name}</h3>\n                        <p className=\"text-xs text-gray-400\">{agent.description}</p>\n                      </div>\n                    </div>\n                    \n                    {isActive && <Loader className=\"w-5 h-5 text-purple-400 animate-spin\" />}\n                    {isCompleted && <CheckCircle className=\"w-5 h-5 text-green-400\" />}\n                  </div>\n                  \n                  {agent.count > 0 && (\n                    <div className=\"text-center py-2 px-3 bg-gray-900 rounded-lg\">\n                      <span className=\"text-2xl font-bold text-white\">{agent.count}</span>\n                      <span className=\"text-xs text-gray-400 ml-2\">\n                        {agent.id === 'discovery' && 'endpoints'}\n                        {agent.id === 'spec' && 'paths'}\n                        {agent.id === 'test' && 'tests'}\n                        {agent.id === 'ai' && 'insights'}\n                        {agent.id === 'mock' && 'server'}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {activeTab === 'console' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-white flex items-center\">\n                <Terminal className=\"w-5 h-5 mr-2\" />\n                Live Console\n              </h2>\n              <button\n                onClick={() => setMessages([])}\n                className=\"text-sm text-gray-400 hover:text-white transition\"\n              >\n                Clear\n              </button>\n            </div>\n            \n            <div className=\"bg-gray-900 rounded-lg h-96 overflow-y-auto p-4 font-mono text-sm\">\n              {messages.length === 0 ? (\n                <div className=\"text-gray-500 text-center py-8\">\n                  No messages yet. Start orchestration to see live updates.\n                </div>\n              ) : (\n                messages.map((msg, index) => (\n                  <div\n                    key={index}\n                    className={`mb-2 ${\n                      msg.type === 'error' ? 'text-red-400' :\n                      msg.type === 'success' ? 'text-green-400' :\n                      msg.type === 'discovery' ? 'text-purple-400' :\n                      msg.type === 'spec' ? 'text-blue-400' :\n                      msg.type === 'test' ? 'text-yellow-400' :\n                      msg.type === 'ai' ? 'text-cyan-400' :\n                      msg.type === 'mock' ? 'text-orange-400' :\n                      'text-gray-300'\n                    }`}\n                  >\n                    <span className=\"text-gray-500\">[{msg.timestamp}]</span> {msg.text}\n                  </div>\n                ))\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'ai-analysis' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-6 flex items-center\">\n              <Brain className=\"w-6 h-6 mr-2 text-purple-400\" />\n              AI Analysis Results\n            </h2>\n            <AIAnalysis projectId={id} />\n          </div>\n        )}\n\n        {activeTab === 'mock-server' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-6 flex items-center\">\n              <Server className=\"w-6 h-6 mr-2 text-purple-400\" />\n              Mock Server Management\n            </h2>\n            <MockServerManager taskId={currentTask} />\n          </div>\n        )}\n\n        {activeTab === 'artifacts' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Download Cards */}\n            {currentTask || (project.tasks && project.tasks.length > 0) ? (\n              <>\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <FileCode className=\"w-8 h-8 text-blue-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">OpenAPI Specification</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Complete API documentation in OpenAPI 3.0 format</p>\n                  <button\n                    onClick={() => downloadArtifact('json')}\n                    className=\"w-full px-4 py-2 bg-blue-600/20 text-blue-400 border border-blue-500/50 rounded-lg hover:bg-blue-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Download JSON\n                  </button>\n                </div>\n\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <TestTube className=\"w-8 h-8 text-yellow-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">Test Suites</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Comprehensive tests for all endpoints</p>\n                  <button\n                    onClick={() => downloadArtifact('postman')}\n                    className=\"w-full px-4 py-2 bg-yellow-600/20 text-yellow-400 border border-yellow-500/50 rounded-lg hover:bg-yellow-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Postman Collection\n                  </button>\n                </div>\n\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <Server className=\"w-8 h-8 text-orange-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">Mock Server</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Ready-to-run mock server with Docker</p>\n                  <button\n                    onClick={() => downloadArtifact('zip')}\n                    className=\"w-full px-4 py-2 bg-orange-600/20 text-orange-400 border border-orange-500/50 rounded-lg hover:bg-orange-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Download All\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className=\"col-span-3 text-center py-12\">\n                <FileCode className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-400 mb-2\">No artifacts yet</h3>\n                <p className=\"text-gray-500\">Run orchestration to generate artifacts</p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetails;"],"names":["ProjectDetails","id","useParams","navigate","useNavigate","user","useAuth","wsRef","useRef","messagesEndRef","project","setProject","useState","loading","setLoading","orchestrating","setOrchestrating","currentTask","setCurrentTask","messages","setMessages","activeTab","setActiveTab","wsConnected","setWsConnected","orchestrationProgress","setOrchestrationProgress","useEffect","fetchProject","connectWebSocket","response","axios","getApiUrl","latestTask","error","ws","getWebSocketURL","addMessage","event","data","handleWebSocketMessage","err","updateAgentStatus","prev","stage","status","agent","text","type","timestamp","startOrchestration","downloadArtifact","format","url","link","dataStr","dataUri","jsx","Loader","jsxs","XCircle","agents","FileCode","TestTube","Brain","Server","ArrowLeft","Folder","Activity","Fragment","PlayCircle","MoreVertical","tab","Icon","isActive","isCompleted","CheckCircle","Terminal","msg","index","AIAnalysis","MockServerManager","Download"],"mappings":"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"}