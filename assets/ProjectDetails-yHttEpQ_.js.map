{"version":3,"file":"ProjectDetails-yHttEpQ_.js","sources":["../../node_modules/lucide-react/dist/esm/icons/lock-open.js","../../src/components/AutonomousSecurityPanel.jsx","../../src/components/ProjectDetails.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"18\", height: \"11\", x: \"3\", y: \"11\", rx: \"2\", ry: \"2\", key: \"1w4ew1\" }],\n  [\"path\", { d: \"M7 11V7a5 5 0 0 1 9.9-1\", key: \"1mm8w8\" }]\n];\nconst LockOpen = createLucideIcon(\"lock-open\", __iconNode);\n\nexport { __iconNode, LockOpen as default };\n//# sourceMappingURL=lock-open.js.map\n","import React, { useState, useEffect } from 'react';\nimport {\n  Shield,\n  AlertTriangle,\n  CheckCircle,\n  Play,\n  Pause,\n  Zap,\n  Bot,\n  Lock,\n  Unlock,\n  FileCheck,\n  AlertCircle,\n  Settings,\n  RefreshCw\n} from 'lucide-react';\nimport axios from 'axios';\n\nconst AutonomousSecurityPanel = ({ projectId, endpoint }) => {\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [autoExecute, setAutoExecute] = useState(false);\n  const [safeMode, setSafeMode] = useState(true);\n  const [executionLog, setExecutionLog] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getApiUrl = (path) => {\n    const baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:8000';\n    return `${baseUrl}${path}`;\n  };\n\n  const addLog = (message, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    setExecutionLog(prev => [...prev, { message, type, timestamp }]);\n  };\n\n  const runAutonomousAnalysis = async () => {\n    setIsAnalyzing(true);\n    setError(null);\n    setExecutionLog([]);\n    addLog('üöÄ Starting autonomous security analysis...', 'info');\n\n    try {\n      // Call the autonomous security analysis endpoint\n      const response = await axios.post(\n        getApiUrl('/api/ultra-premium/autonomous-security-analysis'),\n        {\n          endpoint_data: {\n            path: endpoint?.path || '/api/test',\n            method: endpoint?.method || 'GET',\n            security: endpoint?.security || []\n          },\n          project_id: projectId,\n          auto_execute: autoExecute,\n          auto_fix_low_risk: !safeMode,\n          require_approval_medium_risk: true,\n          business_context: 'API Security Analysis'\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n          }\n        }\n      );\n\n      if (response.data.success) {\n        const result = response.data.data;\n        setAnalysisResult(result);\n\n        // Log the analysis results\n        addLog(`‚úÖ Analysis complete!`, 'success');\n\n        if (result.plan) {\n          addLog(`üìã Created plan with ${result.plan.actions?.length || 0} actions`, 'info');\n          addLog(`‚ö†Ô∏è Risk level: ${result.plan.risk_assessment}`, 'warning');\n        }\n\n        if (result.vulnerabilities_found) {\n          addLog(`üîç Found ${result.vulnerabilities_found.length} vulnerabilities`, 'warning');\n          result.vulnerabilities_found.forEach(vuln => {\n            addLog(`  ‚Ä¢ ${vuln.type}: ${vuln.issue}`, 'warning');\n          });\n        }\n\n        if (result.execution_results) {\n          addLog(`üîß Executed ${result.execution_results.length} actions`, 'success');\n          result.execution_results.forEach(exec => {\n            if (exec.status === 'completed') {\n              addLog(`  ‚úÖ ${exec.action}: ${exec.result}`, 'success');\n            } else {\n              addLog(`  ‚ùå ${exec.action}: ${exec.error}`, 'error');\n            }\n          });\n        }\n\n        if (result.fixes_applied > 0) {\n          addLog(`üõ†Ô∏è Applied ${result.fixes_applied} automatic fixes`, 'success');\n        }\n      } else {\n        throw new Error(response.data.error || 'Analysis failed');\n      }\n    } catch (err) {\n      console.error('Autonomous analysis error:', err);\n      setError(err.response?.data?.detail || err.message || 'Failed to run analysis');\n      addLog(`‚ùå Error: ${err.message}`, 'error');\n\n      // Check if it's a subscription issue\n      if (err.response?.status === 402) {\n        setError('Ultra Premium subscription required for autonomous AI agents');\n        addLog('‚ö†Ô∏è Ultra Premium subscription required', 'warning');\n      }\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const executeApprovedPlan = async (planId) => {\n    try {\n      addLog('ü§ñ Executing approved plan...', 'info');\n\n      const response = await axios.post(\n        getApiUrl('/api/ultra-premium/execute-approved-plan'),\n        {\n          plan_id: planId,\n          project_id: projectId,\n          endpoint_data: endpoint\n        },\n        {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n          }\n        }\n      );\n\n      if (response.data.success) {\n        addLog('‚úÖ Plan executed successfully', 'success');\n        setAnalysisResult(prev => ({\n          ...prev,\n          execution_results: response.data.data.results\n        }));\n      }\n    } catch (err) {\n      addLog(`‚ùå Execution failed: ${err.message}`, 'error');\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"p-2 bg-purple-600/20 rounded-lg\">\n            <Shield className=\"w-6 h-6 text-purple-400\" />\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-white\">Autonomous Security AI</h3>\n            <p className=\"text-sm text-gray-400\">AI-powered security analysis and remediation</p>\n          </div>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Bot className=\"w-5 h-5 text-purple-400\" />\n          <span className=\"text-sm text-purple-400\">Ultra Premium</span>\n        </div>\n      </div>\n\n      {/* Settings */}\n      <div className=\"grid grid-cols-2 gap-4 mb-6\">\n        <div className=\"flex items-center justify-between p-3 bg-gray-700/50 rounded-lg\">\n          <div className=\"flex items-center gap-2\">\n            {safeMode ? <Lock className=\"w-4 h-4 text-green-400\" /> : <Unlock className=\"w-4 h-4 text-yellow-400\" />}\n            <span className=\"text-sm text-gray-300\">Safe Mode</span>\n          </div>\n          <button\n            onClick={() => setSafeMode(!safeMode)}\n            className={`px-3 py-1 text-xs rounded-full transition ${\n              safeMode\n                ? 'bg-green-600/20 text-green-400 border border-green-500/30'\n                : 'bg-yellow-600/20 text-yellow-400 border border-yellow-500/30'\n            }`}\n          >\n            {safeMode ? 'ON' : 'OFF'}\n          </button>\n        </div>\n\n        <div className=\"flex items-center justify-between p-3 bg-gray-700/50 rounded-lg\">\n          <div className=\"flex items-center gap-2\">\n            <Zap className=\"w-4 h-4 text-blue-400\" />\n            <span className=\"text-sm text-gray-300\">Auto-Execute</span>\n          </div>\n          <button\n            onClick={() => setAutoExecute(!autoExecute)}\n            disabled={safeMode}\n            className={`px-3 py-1 text-xs rounded-full transition ${\n              autoExecute\n                ? 'bg-blue-600/20 text-blue-400 border border-blue-500/30'\n                : 'bg-gray-600/20 text-gray-400 border border-gray-500/30'\n            } ${safeMode ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            {autoExecute ? 'ON' : 'OFF'}\n          </button>\n        </div>\n      </div>\n\n      {/* Analysis Button */}\n      <button\n        onClick={runAutonomousAnalysis}\n        disabled={isAnalyzing}\n        className={`w-full py-3 px-4 rounded-lg font-medium transition flex items-center justify-center gap-2 ${\n          isAnalyzing\n            ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\n            : 'bg-gradient-to-r from-purple-600 to-blue-600 text-white hover:from-purple-700 hover:to-blue-700'\n        }`}\n      >\n        {isAnalyzing ? (\n          <>\n            <RefreshCw className=\"w-5 h-5 animate-spin\" />\n            Analyzing...\n          </>\n        ) : (\n          <>\n            <Play className=\"w-5 h-5\" />\n            Run Autonomous Analysis\n          </>\n        )}\n      </button>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"mt-4 p-3 bg-red-500/10 border border-red-500/30 rounded-lg\">\n          <div className=\"flex items-start gap-2\">\n            <AlertCircle className=\"w-5 h-5 text-red-400 flex-shrink-0 mt-0.5\" />\n            <p className=\"text-sm text-red-400\">{error}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Results Display */}\n      {analysisResult && (\n        <div className=\"mt-6 space-y-4\">\n          {/* Summary */}\n          <div className=\"grid grid-cols-3 gap-3\">\n            <div className=\"p-3 bg-gray-700/50 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-yellow-400\">\n                {analysisResult.vulnerabilities_found?.length || 0}\n              </div>\n              <div className=\"text-xs text-gray-400\">Vulnerabilities</div>\n            </div>\n            <div className=\"p-3 bg-gray-700/50 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-400\">\n                {analysisResult.fixes_applied || 0}\n              </div>\n              <div className=\"text-xs text-gray-400\">Fixes Applied</div>\n            </div>\n            <div className=\"p-3 bg-gray-700/50 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-400\">\n                {analysisResult.plan?.confidence_score ?\n                  `${(analysisResult.plan.confidence_score * 100).toFixed(0)}%` :\n                  'N/A'\n                }\n              </div>\n              <div className=\"text-xs text-gray-400\">Confidence</div>\n            </div>\n          </div>\n\n          {/* Action Plan */}\n          {analysisResult.plan && analysisResult.plan.requires_approval && (\n            <div className=\"p-4 bg-yellow-500/10 border border-yellow-500/30 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center gap-2\">\n                  <AlertTriangle className=\"w-5 h-5 text-yellow-400\" />\n                  <span className=\"text-sm font-medium text-yellow-400\">\n                    Approval Required - {analysisResult.plan.actions?.length || 0} Actions Planned\n                  </span>\n                </div>\n                <button\n                  onClick={() => executeApprovedPlan(analysisResult.plan.plan_id)}\n                  className=\"px-3 py-1 bg-yellow-600/20 text-yellow-400 rounded-lg text-sm hover:bg-yellow-600/30 transition\"\n                >\n                  Approve & Execute\n                </button>\n              </div>\n              <div className=\"space-y-1\">\n                {analysisResult.plan.actions?.slice(0, 3).map((action, idx) => (\n                  <div key={idx} className=\"text-xs text-gray-400\">\n                    ‚Ä¢ {action.tool_name}: {action.reasoning}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Vulnerabilities List */}\n          {analysisResult.vulnerabilities_found && analysisResult.vulnerabilities_found.length > 0 && (\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-gray-300\">Vulnerabilities Found:</h4>\n              {analysisResult.vulnerabilities_found.slice(0, 5).map((vuln, idx) => (\n                <div key={idx} className=\"p-3 bg-gray-700/30 rounded-lg flex items-start gap-3\">\n                  <div className={`mt-1 w-2 h-2 rounded-full flex-shrink-0 ${\n                    vuln.severity === 'HIGH' ? 'bg-red-400' :\n                    vuln.severity === 'MEDIUM' ? 'bg-yellow-400' :\n                    'bg-blue-400'\n                  }`} />\n                  <div className=\"flex-1\">\n                    <div className=\"text-sm font-medium text-gray-200\">{vuln.type}</div>\n                    <div className=\"text-xs text-gray-400 mt-1\">{vuln.issue}</div>\n                    {vuln.fixed && (\n                      <div className=\"flex items-center gap-1 mt-2\">\n                        <CheckCircle className=\"w-3 h-3 text-green-400\" />\n                        <span className=\"text-xs text-green-400\">Fixed automatically</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Execution Log */}\n      {executionLog.length > 0 && (\n        <div className=\"mt-6\">\n          <h4 className=\"text-sm font-medium text-gray-300 mb-3\">Execution Log:</h4>\n          <div className=\"bg-gray-900/50 rounded-lg p-3 max-h-48 overflow-y-auto space-y-1\">\n            {executionLog.map((log, idx) => (\n              <div key={idx} className=\"flex items-start gap-2 text-xs\">\n                <span className=\"text-gray-500\">{log.timestamp}</span>\n                <span className={`flex-1 ${\n                  log.type === 'error' ? 'text-red-400' :\n                  log.type === 'success' ? 'text-green-400' :\n                  log.type === 'warning' ? 'text-yellow-400' :\n                  'text-gray-400'\n                }`}>\n                  {log.message}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AutonomousSecurityPanel;","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getApiUrl, getWebSocketURL } from '../config';\nimport axios from 'axios';\nimport AIAnalysis from './AIAnalysis';\nimport MockServerManager from './MockServerManager';\nimport AutonomousSecurityPanel from './AutonomousSecurityPanel';\nimport { \n  ArrowLeft,\n  Folder,\n  PlayCircle,\n  Download,\n  Activity,\n  FileCode,\n  TestTube,\n  Brain,\n  Server,\n  CheckCircle,\n  XCircle,\n  Clock,\n  MoreVertical,\n  Loader,\n  Terminal,\n  Shield,\n  TrendingUp\n} from 'lucide-react';\n\nconst ProjectDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const wsRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  \n  const [project, setProject] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [orchestrating, setOrchestrating] = useState(false);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [wsConnected, setWsConnected] = useState(false);\n  const [orchestrationProgress, setOrchestrationProgress] = useState({\n    discovery: { status: 'pending', count: 0 },\n    spec: { status: 'pending', count: 0 },\n    test: { status: 'pending', count: 0 },\n    ai: { status: 'pending', count: 0 },\n    mock: { status: 'pending', count: 0 }\n  });\n\n  useEffect(() => {\n    fetchProject();\n    connectWebSocket();\n    \n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const fetchProject = async () => {\n    try {\n      const response = await axios.get(getApiUrl(`/api/projects/${id}`));\n      setProject(response.data);\n      \n      // Check if there's an active task\n      if (response.data.tasks && response.data.tasks.length > 0) {\n        const latestTask = response.data.tasks[response.data.tasks.length - 1];\n        if (latestTask.status === 'running') {\n          setOrchestrating(true);\n          setCurrentTask(latestTask);\n        }\n      }\n    } catch (error) {\n      console.error('Failed to fetch project:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket(getWebSocketURL());\n      \n      ws.onopen = () => {\n        setWsConnected(true);\n        addMessage('Connected to orchestration server', 'success');\n      };\n      \n      ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (err) {\n          console.error('Failed to parse WebSocket message:', err);\n        }\n      };\n      \n      ws.onclose = () => {\n        setWsConnected(false);\n        addMessage('Disconnected from server', 'error');\n        // Attempt to reconnect after 3 seconds\n        setTimeout(() => {\n          if (!wsRef.current || wsRef.current.readyState === WebSocket.CLOSED) {\n            connectWebSocket();\n          }\n        }, 3000);\n      };\n      \n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        addMessage('Connection error', 'error');\n      };\n      \n      wsRef.current = ws;\n    } catch (err) {\n      console.error('Failed to connect WebSocket:', err);\n      setWsConnected(false);\n    }\n  };\n\n  const handleWebSocketMessage = (data) => {\n    // Only process messages for this project\n    if (data.project_id && data.project_id !== parseInt(id)) {\n      return;\n    }\n\n    switch(data.type) {\n      case 'progress':\n        addMessage(data.message, 'info');\n        updateAgentStatus(data.stage, 'active');\n        break;\n        \n      case 'discovery_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          discovery: { status: 'completed', count: data.apis_found }\n        }));\n        addMessage(`Discovery complete: ${data.apis_found} APIs found`, 'discovery');\n        break;\n        \n      case 'spec_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          spec: { status: 'completed', count: data.paths }\n        }));\n        addMessage(`Spec generation complete: ${data.paths} paths`, 'spec');\n        break;\n        \n      case 'tests_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          test: { status: 'completed', count: data.tests_generated }\n        }));\n        addMessage(`Test generation complete: ${data.tests_generated} tests`, 'test');\n        break;\n        \n      case 'ai_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          ai: { status: 'completed', count: 1 }\n        }));\n        addMessage('AI analysis complete', 'ai');\n        break;\n        \n      case 'mock_complete':\n        setOrchestrationProgress(prev => ({\n          ...prev,\n          mock: { status: 'completed', count: 1 }\n        }));\n        addMessage('Mock server ready', 'mock');\n        break;\n        \n      case 'orchestration_complete':\n        setOrchestrating(false);\n        setCurrentTask(null);\n        addMessage('‚ú® Orchestration complete!', 'success');\n        fetchProject(); // Refresh project data\n        break;\n        \n      case 'error':\n        addMessage(`Error: ${data.error}`, 'error');\n        break;\n    }\n  };\n\n  const updateAgentStatus = (stage, status) => {\n    const agentMap = {\n      'discovery': 'discovery',\n      'spec_generation': 'spec',\n      'test_generation': 'test',\n      'ai_analysis': 'ai',\n      'mock_server': 'mock'\n    };\n    \n    const agent = agentMap[stage];\n    if (agent) {\n      setOrchestrationProgress(prev => ({\n        ...prev,\n        [agent]: { ...prev[agent], status: 'active' }\n      }));\n    }\n  };\n\n  const addMessage = (text, type = 'info') => {\n    const timestamp = new Date().toLocaleTimeString();\n    setMessages(prev => [...prev, { text, type, timestamp }]);\n  };\n\n  const startOrchestration = async () => {\n    try {\n      setOrchestrating(true);\n      setMessages([]);\n      setOrchestrationProgress({\n        discovery: { status: 'pending', count: 0 },\n        spec: { status: 'pending', count: 0 },\n        test: { status: 'pending', count: 0 },\n        ai: { status: 'pending', count: 0 },\n        mock: { status: 'pending', count: 0 }\n      });\n      \n      const response = await axios.post(getApiUrl(`/api/projects/${id}/orchestrate`));\n      setCurrentTask(response.data);\n      addMessage(`Orchestration started: Task ${response.data.task_id}`, 'info');\n    } catch (error) {\n      addMessage(`Failed to start orchestration: ${error.message}`, 'error');\n      setOrchestrating(false);\n    }\n  };\n\n  const downloadArtifact = async (format) => {\n    try {\n      const response = await axios.get(getApiUrl(`/api/export/${currentTask?.task_id || project.tasks[0]?.task_id}?format=${format}`), {\n        responseType: format === 'zip' ? 'blob' : 'json'\n      });\n      \n      if (format === 'zip') {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `${project.name}-artifacts.zip`);\n        document.body.appendChild(link);\n        link.click();\n      } else {\n        const dataStr = JSON.stringify(response.data, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n        const link = document.createElement('a');\n        link.setAttribute('href', dataUri);\n        link.setAttribute('download', `${project.name}-${format}.json`);\n        link.click();\n      }\n    } catch (error) {\n      addMessage(`Download failed: ${error.message}`, 'error');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <Loader className=\"w-8 h-8 text-purple-600 animate-spin\" />\n      </div>\n    );\n  }\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900\">\n        <div className=\"text-center\">\n          <XCircle className=\"w-16 h-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-white mb-2\">Project Not Found</h2>\n          <button\n            onClick={() => navigate('/dashboard')}\n            className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition\"\n          >\n            Back to Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const agents = [\n    { \n      id: 'discovery', \n      name: 'Discovery Agent', \n      icon: FileCode,\n      description: 'Scanning for API endpoints',\n      status: orchestrationProgress.discovery.status,\n      count: orchestrationProgress.discovery.count\n    },\n    { \n      id: 'spec', \n      name: 'Spec Generator', \n      icon: FileCode,\n      description: 'Creating OpenAPI specs',\n      status: orchestrationProgress.spec.status,\n      count: orchestrationProgress.spec.count\n    },\n    { \n      id: 'test', \n      name: 'Test Generator', \n      icon: TestTube,\n      description: 'Generating test suites',\n      status: orchestrationProgress.test.status,\n      count: orchestrationProgress.test.count\n    },\n    { \n      id: 'ai', \n      name: 'AI Analyzer', \n      icon: Brain,\n      description: 'AI-powered insights',\n      status: orchestrationProgress.ai.status,\n      count: orchestrationProgress.ai.count\n    },\n    { \n      id: 'mock', \n      name: 'Mock Server', \n      icon: Server,\n      description: 'Creating mock server',\n      status: orchestrationProgress.mock.status,\n      count: orchestrationProgress.mock.count\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-900\">\n      {/* Header */}\n      <header className=\"bg-gray-800/50 backdrop-blur-lg border-b border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/dashboard')}\n                className=\"flex items-center space-x-2 text-gray-400 hover:text-white transition\"\n              >\n                <ArrowLeft className=\"w-5 h-5\" />\n                <span>Back to Dashboard</span>\n              </button>\n              \n              <div className=\"flex items-center space-x-3\">\n                <Folder className=\"w-6 h-6 text-purple-500\" />\n                <h1 className=\"text-xl font-semibold text-white\">{project.name}</h1>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              {/* WebSocket Status */}\n              <div className={`flex items-center space-x-2 px-3 py-1 rounded-full ${\n                wsConnected \n                  ? 'bg-green-500/20 text-green-400 border border-green-500/50'\n                  : 'bg-red-500/20 text-red-400 border border-red-500/50'\n              }`}>\n                <Activity className=\"w-4 h-4\" />\n                <span className=\"text-sm\">{wsConnected ? 'Connected' : 'Disconnected'}</span>\n              </div>\n\n              {/* Actions */}\n              <button\n                onClick={startOrchestration}\n                disabled={orchestrating}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {orchestrating ? (\n                  <>\n                    <Loader className=\"w-5 h-5 animate-spin\" />\n                    <span>Orchestrating...</span>\n                  </>\n                ) : (\n                  <>\n                    <PlayCircle className=\"w-5 h-5\" />\n                    <span>Start Orchestration</span>\n                  </>\n                )}\n              </button>\n\n              <button className=\"p-2 text-gray-400 hover:text-white\">\n                <MoreVertical className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Tabs */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"border-b border-gray-700\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {['overview', 'agents', 'ai-analysis', 'security', 'mock-server', 'console', 'artifacts'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm capitalize transition ${\n                  activeTab === tab\n                    ? 'border-purple-500 text-purple-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-300 hover:border-gray-300'\n                }`}\n              >\n                {tab}\n              </button>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8\">\n        {activeTab === 'overview' && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Project Info */}\n            <div className=\"lg:col-span-2 bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n              <h2 className=\"text-lg font-semibold text-white mb-4\">Project Information</h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"text-sm text-gray-400\">Description</label>\n                  <p className=\"text-white\">{project.description || 'No description provided'}</p>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm text-gray-400\">Source Type</label>\n                    <p className=\"text-white capitalize\">{project.source_type || 'Not specified'}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm text-gray-400\">Created</label>\n                    <p className=\"text-white\">{new Date(project.created_at).toLocaleDateString()}</p>\n                  </div>\n                </div>\n                \n                <div>\n                  <label className=\"text-sm text-gray-400\">Source Path</label>\n                  <p className=\"text-white font-mono text-sm bg-gray-900 p-2 rounded\">\n                    {project.source_path || 'Not configured'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Stats */}\n            <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n              <h2 className=\"text-lg font-semibold text-white mb-4\">Statistics</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">APIs Found</span>\n                  <span className=\"text-2xl font-bold text-purple-400\">\n                    {project.api_count || 0}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Tests Generated</span>\n                  <span className=\"text-2xl font-bold text-blue-400\">\n                    {project.test_count || 0}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Security Score</span>\n                  <span className=\"text-2xl font-bold text-green-400\">\n                    {project.security_score || 'N/A'}%\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-gray-400\">Tasks Run</span>\n                  <span className=\"text-2xl font-bold text-yellow-400\">\n                    {project.task_count || 0}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'agents' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {agents.map((agent) => {\n              const Icon = agent.icon;\n              const isActive = agent.status === 'active';\n              const isCompleted = agent.status === 'completed';\n              \n              return (\n                <div\n                  key={agent.id}\n                  className={`bg-gray-800/50 backdrop-blur rounded-xl border p-6 transition ${\n                    isActive \n                      ? 'border-purple-500 shadow-lg shadow-purple-500/20' \n                      : isCompleted\n                      ? 'border-green-500/50'\n                      : 'border-gray-700'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`p-2 rounded-lg ${\n                        isActive \n                          ? 'bg-purple-600/20' \n                          : isCompleted\n                          ? 'bg-green-600/20'\n                          : 'bg-gray-700'\n                      }`}>\n                        <Icon className={`w-6 h-6 ${\n                          isActive \n                            ? 'text-purple-400' \n                            : isCompleted\n                            ? 'text-green-400'\n                            : 'text-gray-400'\n                        }`} />\n                      </div>\n                      <div>\n                        <h3 className=\"text-white font-medium\">{agent.name}</h3>\n                        <p className=\"text-xs text-gray-400\">{agent.description}</p>\n                      </div>\n                    </div>\n                    \n                    {isActive && <Loader className=\"w-5 h-5 text-purple-400 animate-spin\" />}\n                    {isCompleted && <CheckCircle className=\"w-5 h-5 text-green-400\" />}\n                  </div>\n                  \n                  {agent.count > 0 && (\n                    <div className=\"text-center py-2 px-3 bg-gray-900 rounded-lg\">\n                      <span className=\"text-2xl font-bold text-white\">{agent.count}</span>\n                      <span className=\"text-xs text-gray-400 ml-2\">\n                        {agent.id === 'discovery' && 'endpoints'}\n                        {agent.id === 'spec' && 'paths'}\n                        {agent.id === 'test' && 'tests'}\n                        {agent.id === 'ai' && 'insights'}\n                        {agent.id === 'mock' && 'server'}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {activeTab === 'console' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-white flex items-center\">\n                <Terminal className=\"w-5 h-5 mr-2\" />\n                Live Console\n              </h2>\n              <button\n                onClick={() => setMessages([])}\n                className=\"text-sm text-gray-400 hover:text-white transition\"\n              >\n                Clear\n              </button>\n            </div>\n            \n            <div className=\"bg-gray-900 rounded-lg h-96 overflow-y-auto p-4 font-mono text-sm\">\n              {messages.length === 0 ? (\n                <div className=\"text-gray-500 text-center py-8\">\n                  No messages yet. Start orchestration to see live updates.\n                </div>\n              ) : (\n                messages.map((msg, index) => (\n                  <div\n                    key={index}\n                    className={`mb-2 ${\n                      msg.type === 'error' ? 'text-red-400' :\n                      msg.type === 'success' ? 'text-green-400' :\n                      msg.type === 'discovery' ? 'text-purple-400' :\n                      msg.type === 'spec' ? 'text-blue-400' :\n                      msg.type === 'test' ? 'text-yellow-400' :\n                      msg.type === 'ai' ? 'text-cyan-400' :\n                      msg.type === 'mock' ? 'text-orange-400' :\n                      'text-gray-300'\n                    }`}\n                  >\n                    <span className=\"text-gray-500\">[{msg.timestamp}]</span> {msg.text}\n                  </div>\n                ))\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'ai-analysis' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-6 flex items-center\">\n              <Brain className=\"w-6 h-6 mr-2 text-purple-400\" />\n              AI Analysis Results\n            </h2>\n            <AIAnalysis projectId={id} />\n          </div>\n        )}\n\n        {activeTab === 'security' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-6 flex items-center\">\n              <Shield className=\"w-6 h-6 mr-2 text-purple-400\" />\n              Autonomous Security Analysis\n            </h2>\n            <AutonomousSecurityPanel\n              projectId={id}\n              endpoint={project?.apis?.[0] || { path: '/api/test', method: 'GET' }}\n            />\n          </div>\n        )}\n\n        {activeTab === 'mock-server' && (\n          <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-white mb-6 flex items-center\">\n              <Server className=\"w-6 h-6 mr-2 text-purple-400\" />\n              Mock Server Management\n            </h2>\n            <MockServerManager taskId={currentTask} />\n          </div>\n        )}\n\n        {activeTab === 'artifacts' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Download Cards */}\n            {currentTask || (project.tasks && project.tasks.length > 0) ? (\n              <>\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <FileCode className=\"w-8 h-8 text-blue-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">OpenAPI Specification</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Complete API documentation in OpenAPI 3.0 format</p>\n                  <button\n                    onClick={() => downloadArtifact('json')}\n                    className=\"w-full px-4 py-2 bg-blue-600/20 text-blue-400 border border-blue-500/50 rounded-lg hover:bg-blue-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Download JSON\n                  </button>\n                </div>\n\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <TestTube className=\"w-8 h-8 text-yellow-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">Test Suites</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Comprehensive tests for all endpoints</p>\n                  <button\n                    onClick={() => downloadArtifact('postman')}\n                    className=\"w-full px-4 py-2 bg-yellow-600/20 text-yellow-400 border border-yellow-500/50 rounded-lg hover:bg-yellow-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Postman Collection\n                  </button>\n                </div>\n\n                <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n                  <Server className=\"w-8 h-8 text-orange-500 mb-4\" />\n                  <h3 className=\"text-white font-semibold mb-2\">Mock Server</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">Ready-to-run mock server with Docker</p>\n                  <button\n                    onClick={() => downloadArtifact('zip')}\n                    className=\"w-full px-4 py-2 bg-orange-600/20 text-orange-400 border border-orange-500/50 rounded-lg hover:bg-orange-600/30 transition\"\n                  >\n                    <Download className=\"w-4 h-4 inline mr-2\" />\n                    Download All\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className=\"col-span-3 text-center py-12\">\n                <FileCode className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-400 mb-2\">No artifacts yet</h3>\n                <p className=\"text-gray-500\">Run orchestration to generate artifacts</p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectDetails;"],"names":["__iconNode","LockOpen","createLucideIcon","AutonomousSecurityPanel","projectId","endpoint","isAnalyzing","setIsAnalyzing","useState","analysisResult","setAnalysisResult","autoExecute","setAutoExecute","safeMode","setSafeMode","executionLog","setExecutionLog","error","setError","getApiUrl","path","addLog","message","type","timestamp","prev","runAutonomousAnalysis","response","axios","result","vuln","exec","err","executeApprovedPlan","planId","jsxs","jsx","Shield","Bot","Lock","Unlock","Zap","Fragment","RefreshCw","Play","AlertCircle","AlertTriangle","action","idx","CheckCircle","log","ProjectDetails","id","useParams","navigate","useNavigate","user","useAuth","wsRef","useRef","messagesEndRef","project","setProject","loading","setLoading","orchestrating","setOrchestrating","currentTask","setCurrentTask","messages","setMessages","activeTab","setActiveTab","wsConnected","setWsConnected","orchestrationProgress","setOrchestrationProgress","useEffect","fetchProject","connectWebSocket","latestTask","ws","getWebSocketURL","addMessage","event","data","handleWebSocketMessage","updateAgentStatus","stage","status","agent","text","startOrchestration","downloadArtifact","format","url","link","dataStr","dataUri","Loader","XCircle","agents","FileCode","TestTube","Brain","Server","ArrowLeft","Folder","Activity","PlayCircle","MoreVertical","tab","Icon","isActive","isCompleted","Terminal","msg","index","AIAnalysis","MockServerManager","Download"],"mappings":"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","x_google_ignoreList":[0]}