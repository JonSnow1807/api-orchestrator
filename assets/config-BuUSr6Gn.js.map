{"version":3,"file":"config-BuUSr6Gn.js","sources":["../../src/config.js"],"sourcesContent":["// API Configuration\n// In production, use relative URLs (same origin)\n// In development, use localhost:8000\n\nconst isDevelopment = import.meta.env.MODE === 'development';\nconst isProduction = import.meta.env.MODE === 'production';\n\n// Use environment variables if available, otherwise use defaults\nexport const API_BASE_URL = import.meta.env.VITE_API_URL || \n  (isProduction ? '' : 'http://localhost:8000');\n\nexport const WS_BASE_URL = import.meta.env.VITE_WS_URL || \n  (isProduction ? `ws://${window.location.host}` : 'ws://localhost:8000');\n\n// For WebSocket with SSL in production\nexport const getWebSocketURL = () => {\n  if (isProduction) {\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    return `${protocol}//${window.location.host}/ws`;\n  }\n  return 'ws://localhost:8000/ws';\n};\n\n// Helper to get full API URL\nexport const getApiUrl = (path) => {\n  if (path.startsWith('/')) {\n    return `${API_BASE_URL}${path}`;\n  }\n  return `${API_BASE_URL}/${path}`;\n};\n\nexport default {\n  API_BASE_URL,\n  WS_BASE_URL,\n  getWebSocketURL,\n  getApiUrl,\n  isDevelopment,\n  isProduction\n};"],"names":["WS_BASE_URL","getWebSocketURL","getApiUrl","path","config"],"mappings":"AAWO,MAAMA,EACK,QAAQ,OAAO,SAAS,IAAI,GAGjCC,EAAkB,IAGpB,GADU,OAAO,SAAS,WAAa,SAAW,OAAS,KAChD,KAAK,OAAO,SAAS,IAAI,MAMlCC,EAAaC,GACpBA,EAAK,WAAW,GAAG,EACd,GAAkBA,CAAI,GAExB,IAAmBA,CAAI,GAGhCC,EAAe,CACb,gBACA,YAAAJ,EACA,gBAAAC,EACA,UAAAC,EACA,iBACA,eACF"}