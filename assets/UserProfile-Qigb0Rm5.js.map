{"version":3,"file":"UserProfile-Qigb0Rm5.js","sources":["../../node_modules/lucide-react/dist/esm/icons/calendar.js","../../node_modules/lucide-react/dist/esm/icons/key.js","../../node_modules/lucide-react/dist/esm/icons/monitor.js","../../src/components/ProxySettings.jsx","../../src/components/UserProfile.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }]\n];\nconst Calendar = createLucideIcon(\"calendar\", __iconNode);\n\nexport { __iconNode, Calendar as default };\n//# sourceMappingURL=calendar.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4\", key: \"g0fldk\" }],\n  [\"path\", { d: \"m21 2-9.6 9.6\", key: \"1j0ho8\" }],\n  [\"circle\", { cx: \"7.5\", cy: \"15.5\", r: \"5.5\", key: \"yqb3hr\" }]\n];\nconst Key = createLucideIcon(\"key\", __iconNode);\n\nexport { __iconNode, Key as default };\n//# sourceMappingURL=key.js.map\n","/**\n * @license lucide-react v0.539.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"3\", rx: \"2\", key: \"48i651\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"21\", y2: \"21\", key: \"1svkeh\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"17\", y2: \"21\", key: \"vw1qmm\" }]\n];\nconst Monitor = createLucideIcon(\"monitor\", __iconNode);\n\nexport { __iconNode, Monitor as default };\n//# sourceMappingURL=monitor.js.map\n","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\nimport { getApiUrl } from '../config';\nimport {\n  Globe,\n  Shield,\n  Server,\n  Key,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Loader,\n  Settings,\n  Wifi,\n  WifiOff,\n  Lock,\n  Unlock,\n  List,\n  Plus,\n  Trash2,\n  TestTube,\n  Save,\n  RefreshCw,\n  Monitor,\n  Cloud,\n  Building2\n} from 'lucide-react';\n\nconst ProxySettings = ({ workspaceId = null, environmentId = null }) => {\n  const { token } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [testLoading, setTestLoading] = useState(false);\n  const [testResult, setTestResult] = useState(null);\n  const [activeTab, setActiveTab] = useState('global');\n  const [presets, setPresets] = useState([]);\n  const [systemProxy, setSystemProxy] = useState(null);\n  \n  // Proxy configuration state\n  const [proxyConfig, setProxyConfig] = useState({\n    enabled: false,\n    type: 'http',\n    host: '',\n    port: 8080,\n    username: '',\n    password: '',\n    bypass_list: [],\n    use_system_proxy: false,\n    tunnel_https: true,\n    verify_ssl: true,\n    timeout: 30\n  });\n  \n  const [bypassInput, setBypassInput] = useState('');\n\n  useEffect(() => {\n    loadProxySettings();\n    loadPresets();\n    detectSystemProxy();\n  }, [activeTab]);\n\n  const loadProxySettings = async () => {\n    try {\n      const response = await axios.get(\n        getApiUrl('/api/proxy/settings'),\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      if (response.data.success) {\n        const settings = response.data.settings;\n        \n        // Load appropriate settings based on active tab\n        if (activeTab === 'global' && settings.global_proxy) {\n          setProxyConfig(settings.global_proxy);\n        } else if (activeTab === 'workspace' && workspaceId) {\n          const key = `workspace_${workspaceId}`;\n          if (settings.workspace_proxies[key]) {\n            setProxyConfig(settings.workspace_proxies[key]);\n          }\n        } else if (activeTab === 'environment' && environmentId) {\n          const key = `env_${environmentId}`;\n          if (settings.environment_proxies[key]) {\n            setProxyConfig(settings.environment_proxies[key]);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load proxy settings:', error);\n    }\n  };\n\n  const loadPresets = async () => {\n    try {\n      const response = await axios.get(\n        getApiUrl('/api/proxy/presets'),\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      if (response.data.success) {\n        setPresets(response.data.presets);\n      }\n    } catch (error) {\n      console.error('Failed to load presets:', error);\n    }\n  };\n\n  const detectSystemProxy = async () => {\n    try {\n      const response = await axios.get(\n        getApiUrl('/api/proxy/detect-system'),\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      if (response.data.success && response.data.detected) {\n        setSystemProxy(response.data.proxy);\n      }\n    } catch (error) {\n      console.error('Failed to detect system proxy:', error);\n    }\n  };\n\n  const saveProxyConfig = async () => {\n    setLoading(true);\n    try {\n      let endpoint = '/api/proxy/global';\n      if (activeTab === 'workspace' && workspaceId) {\n        endpoint = `/api/proxy/workspace/${workspaceId}`;\n      } else if (activeTab === 'environment' && environmentId) {\n        endpoint = `/api/proxy/environment/${environmentId}`;\n      }\n\n      const response = await axios.post(\n        getApiUrl(endpoint),\n        proxyConfig,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      if (response.data.success) {\n        setTestResult({\n          success: true,\n          message: 'Proxy configuration saved successfully'\n        });\n      }\n    } catch (error) {\n      setTestResult({\n        success: false,\n        message: error.response?.data?.detail || 'Failed to save proxy configuration'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const testProxy = async () => {\n    setTestLoading(true);\n    setTestResult(null);\n    \n    try {\n      const response = await axios.post(\n        getApiUrl('/api/proxy/test'),\n        {\n          config: proxyConfig,\n          test_url: 'http://httpbin.org/ip'\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      \n      setTestResult(response.data.result);\n    } catch (error) {\n      setTestResult({\n        success: false,\n        error: error.response?.data?.detail || 'Connection test failed'\n      });\n    } finally {\n      setTestLoading(false);\n    }\n  };\n\n  const applyPreset = (preset) => {\n    setProxyConfig({\n      ...proxyConfig,\n      ...preset.config,\n      bypass_list: preset.config.bypass_list || []\n    });\n  };\n\n  const addBypassRule = () => {\n    if (bypassInput.trim()) {\n      setProxyConfig({\n        ...proxyConfig,\n        bypass_list: [...proxyConfig.bypass_list, bypassInput.trim()]\n      });\n      setBypassInput('');\n    }\n  };\n\n  const removeBypassRule = (index) => {\n    const newList = proxyConfig.bypass_list.filter((_, i) => i !== index);\n    setProxyConfig({\n      ...proxyConfig,\n      bypass_list: newList\n    });\n  };\n\n  const proxyTypes = [\n    { value: 'http', label: 'HTTP', icon: Globe },\n    { value: 'https', label: 'HTTPS', icon: Lock },\n    { value: 'socks4', label: 'SOCKS4', icon: Server },\n    { value: 'socks5', label: 'SOCKS5', icon: Shield },\n    { value: 'system', label: 'System', icon: Monitor }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-3\">\n            <Globe className=\"w-8 h-8 text-blue-400\" />\n            <div>\n              <h2 className=\"text-2xl font-bold text-white\">Proxy Configuration</h2>\n              <p className=\"text-gray-400\">Configure HTTP, HTTPS, and SOCKS proxy settings</p>\n            </div>\n          </div>\n          <button\n            onClick={detectSystemProxy}\n            className=\"px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition flex items-center space-x-2\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            <span>Detect System</span>\n          </button>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"flex space-x-4 border-b border-gray-700\">\n          <button\n            onClick={() => setActiveTab('global')}\n            className={`pb-2 px-1 transition ${\n              activeTab === 'global'\n                ? 'text-blue-400 border-b-2 border-blue-400'\n                : 'text-gray-400 hover:text-white'\n            }`}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Globe className=\"w-4 h-4\" />\n              <span>Global</span>\n            </div>\n          </button>\n          {workspaceId && (\n            <button\n              onClick={() => setActiveTab('workspace')}\n              className={`pb-2 px-1 transition ${\n                activeTab === 'workspace'\n                  ? 'text-blue-400 border-b-2 border-blue-400'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Building2 className=\"w-4 h-4\" />\n                <span>Workspace</span>\n              </div>\n            </button>\n          )}\n          {environmentId && (\n            <button\n              onClick={() => setActiveTab('environment')}\n              className={`pb-2 px-1 transition ${\n                activeTab === 'environment'\n                  ? 'text-blue-400 border-b-2 border-blue-400'\n                  : 'text-gray-400 hover:text-white'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Cloud className=\"w-4 h-4\" />\n                <span>Environment</span>\n              </div>\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* System Proxy Detection */}\n      {systemProxy && (\n        <div className=\"bg-blue-900/20 border border-blue-500/50 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 text-blue-400\">\n            <Monitor className=\"w-5 h-5\" />\n            <span className=\"font-medium\">System Proxy Detected</span>\n          </div>\n          <p className=\"text-gray-400 text-sm mt-1\">\n            {systemProxy.type.toUpperCase()} proxy at {systemProxy.host}:{systemProxy.port}\n          </p>\n          <button\n            onClick={() => setProxyConfig(systemProxy)}\n            className=\"mt-2 text-sm text-blue-400 hover:text-blue-300\"\n          >\n            Use System Proxy →\n          </button>\n        </div>\n      )}\n\n      {/* Presets */}\n      <div className=\"bg-gray-800 rounded-lg p-6\">\n        <h3 className=\"text-lg font-semibold text-white mb-4\">Quick Presets</h3>\n        <div className=\"grid grid-cols-3 gap-3\">\n          {presets.slice(0, 6).map((preset, index) => (\n            <button\n              key={index}\n              onClick={() => applyPreset(preset)}\n              className=\"p-3 bg-gray-700 rounded-lg hover:bg-gray-600 transition text-left\"\n            >\n              <p className=\"text-white font-medium\">{preset.name}</p>\n              <p className=\"text-gray-400 text-xs mt-1\">{preset.description}</p>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Configuration */}\n      <div className=\"bg-gray-800 rounded-lg p-6\">\n        <div className=\"space-y-4\">\n          {/* Enable/Disable Toggle */}\n          <div className=\"flex items-center justify-between\">\n            <label className=\"text-white font-medium\">Enable Proxy</label>\n            <button\n              onClick={() => setProxyConfig(prev => ({ ...prev, enabled: !prev.enabled }))}\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition ${\n                proxyConfig.enabled ? 'bg-blue-500' : 'bg-gray-600'\n              }`}\n            >\n              <span\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition ${\n                  proxyConfig.enabled ? 'translate-x-6' : 'translate-x-1'\n                }`}\n              />\n            </button>\n          </div>\n\n          {proxyConfig.enabled && (\n            <>\n              {/* Proxy Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                  Proxy Type\n                </label>\n                <div className=\"flex space-x-2\">\n                  {proxyTypes.map(type => (\n                    <button\n                      key={type.value}\n                      onClick={() => setProxyConfig(prev => ({ ...prev, type: type.value }))}\n                      className={`px-4 py-2 rounded-lg flex items-center space-x-2 transition ${\n                        proxyConfig.type === type.value\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                      }`}\n                    >\n                      <type.icon className=\"w-4 h-4\" />\n                      <span>{type.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Host and Port */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                    Proxy Host\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={proxyConfig.host}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, host: e.target.value }))}\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white\"\n                    placeholder=\"e.g., proxy.company.com\"\n                    disabled={proxyConfig.use_system_proxy}\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">\n                    Port\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={proxyConfig.port}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, port: parseInt(e.target.value) }))}\n                    className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white\"\n                    placeholder=\"8080\"\n                    disabled={proxyConfig.use_system_proxy}\n                  />\n                </div>\n              </div>\n\n              {/* Authentication */}\n              <div>\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <Key className=\"w-4 h-4 text-gray-400\" />\n                  <label className=\"text-sm font-medium text-gray-400\">\n                    Proxy Authentication (Optional)\n                  </label>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <input\n                    type=\"text\"\n                    value={proxyConfig.username}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, username: e.target.value }))}\n                    className=\"px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white\"\n                    placeholder=\"Username\"\n                  />\n                  <input\n                    type=\"password\"\n                    value={proxyConfig.password}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, password: e.target.value }))}\n                    className=\"px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n              </div>\n\n              {/* Bypass List */}\n              <div>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <label className=\"text-sm font-medium text-gray-400\">\n                    Bypass List (No proxy for these hosts)\n                  </label>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex space-x-2\">\n                    <input\n                      type=\"text\"\n                      value={bypassInput}\n                      onChange={(e) => setBypassInput(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && addBypassRule()}\n                      className=\"flex-1 px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white\"\n                      placeholder=\"e.g., localhost, *.local, 192.168.*\"\n                    />\n                    <button\n                      onClick={addBypassRule}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition\"\n                    >\n                      <Plus className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                  {proxyConfig.bypass_list.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {proxyConfig.bypass_list.map((rule, index) => (\n                        <div\n                          key={index}\n                          className=\"px-3 py-1 bg-gray-700 rounded-full flex items-center space-x-2\"\n                        >\n                          <span className=\"text-sm text-gray-300\">{rule}</span>\n                          <button\n                            onClick={() => removeBypassRule(index)}\n                            className=\"text-red-400 hover:text-red-300\"\n                          >\n                            <XCircle className=\"w-3 h-3\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Advanced Settings */}\n              <div className=\"space-y-3 pt-4 border-t border-gray-700\">\n                <h4 className=\"text-sm font-medium text-gray-400\">Advanced Settings</h4>\n                \n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm text-gray-300\">HTTPS Tunneling</label>\n                  <input\n                    type=\"checkbox\"\n                    checked={proxyConfig.tunnel_https}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, tunnel_https: e.target.checked }))}\n                    className=\"rounded\"\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm text-gray-300\">Verify SSL Certificates</label>\n                  <input\n                    type=\"checkbox\"\n                    checked={proxyConfig.verify_ssl}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, verify_ssl: e.target.checked }))}\n                    className=\"rounded\"\n                  />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <label className=\"text-sm text-gray-300\">Timeout (seconds)</label>\n                  <input\n                    type=\"number\"\n                    value={proxyConfig.timeout}\n                    onChange={(e) => setProxyConfig(prev => ({ ...prev, timeout: parseInt(e.target.value) }))}\n                    className=\"w-20 px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white\"\n                  />\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Test Result */}\n      {testResult && (\n        <div className={`rounded-lg p-4 ${\n          testResult.success \n            ? 'bg-green-900/20 border border-green-500/50' \n            : 'bg-red-900/20 border border-red-500/50'\n        }`}>\n          <div className=\"flex items-center space-x-2\">\n            {testResult.success ? (\n              <CheckCircle className=\"w-5 h-5 text-green-400\" />\n            ) : (\n              <XCircle className=\"w-5 h-5 text-red-400\" />\n            )}\n            <span className={testResult.success ? 'text-green-400' : 'text-red-400'}>\n              {testResult.success ? 'Proxy connection successful' : 'Proxy connection failed'}\n            </span>\n          </div>\n          {testResult.latency_ms && (\n            <p className=\"text-sm text-gray-400 mt-1\">\n              Latency: {testResult.latency_ms.toFixed(0)}ms\n            </p>\n          )}\n          {testResult.error && (\n            <p className=\"text-sm text-red-400 mt-1\">{testResult.error}</p>\n          )}\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-end space-x-4\">\n        <button\n          onClick={testProxy}\n          disabled={testLoading || !proxyConfig.enabled}\n          className=\"px-6 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 transition disabled:opacity-50 flex items-center space-x-2\"\n        >\n          {testLoading ? (\n            <>\n              <Loader className=\"w-4 h-4 animate-spin\" />\n              <span>Testing...</span>\n            </>\n          ) : (\n            <>\n              <TestTube className=\"w-4 h-4\" />\n              <span>Test Connection</span>\n            </>\n          )}\n        </button>\n        \n        <button\n          onClick={saveProxyConfig}\n          disabled={loading}\n          className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 transition disabled:opacity-50 flex items-center space-x-2\"\n        >\n          {loading ? (\n            <>\n              <Loader className=\"w-4 h-4 animate-spin\" />\n              <span>Saving...</span>\n            </>\n          ) : (\n            <>\n              <Save className=\"w-4 h-4\" />\n              <span>Save Configuration</span>\n            </>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProxySettings;","import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport axios from 'axios';\nimport { \n  User, \n  Mail, \n  CreditCard, \n  Lock, \n  Save, \n  ArrowLeft,\n  CheckCircle,\n  AlertCircle,\n  Shield,\n  Key,\n  Calendar,\n  Building,\n  Sparkles,\n  Clock,\n  TrendingUp,\n  Home,\n  LayoutDashboard,\n  Zap,\n  LogOut,\n  Globe\n} from 'lucide-react';\nimport ProxySettings from './ProxySettings';\n\nconst UserProfile = () => {\n  const navigate = useNavigate();\n  const { user, logout } = useAuth();\n  const [profileData, setProfileData] = useState({\n    name: '',\n    email: '',\n    company: '',\n    api_key: '',\n    subscription_tier: '',\n    created_at: '',\n    last_login: '',\n    api_calls_made: 0,\n    api_calls_limit: 0\n  });\n  const [passwordData, setPasswordData] = useState({\n    current_password: '',\n    new_password: '',\n    confirm_password: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [activeTab, setActiveTab] = useState('profile');\n  const [showApiKey, setShowApiKey] = useState(false);\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      setLoading(true);\n      // Use auth context user data and fetch additional info from /auth/me\n      const response = await axios.get('/auth/me');\n      const userData = response.data;\n      \n      setProfileData({\n        name: userData.username || '',\n        email: userData.email || '',\n        company: userData.company || '',\n        api_key: `sk_${userData.id}_${Math.random().toString(36).substr(2, 9)}`,\n        subscription_tier: userData.subscription_tier || 'free',\n        created_at: userData.created_at || new Date().toISOString(),\n        last_login: new Date().toISOString(),\n        api_calls_made: userData.api_calls_this_month || 0,\n        api_calls_limit: userData.api_calls_limit || 100\n      });\n    } catch (error) {\n      console.error('Failed to fetch profile:', error);\n      // If fetch fails, use data from auth context\n      if (user) {\n        setProfileData({\n          name: user.username || '',\n          email: user.email || '',\n          company: user.company || '',\n          api_key: `sk_${user.id}_${Math.random().toString(36).substr(2, 9)}`,\n          subscription_tier: user.subscription_tier || 'free',\n          created_at: user.created_at || new Date().toISOString(),\n          last_login: new Date().toISOString(),\n          api_calls_made: 0,\n          api_calls_limit: user.api_calls_remaining ? user.api_calls_remaining + user.api_calls_this_month : 100\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      setSaving(true);\n      await axios.put('/api/users/profile', {\n        name: profileData.name,\n        company: profileData.company\n      });\n      setMessage({ type: 'success', text: 'Profile updated successfully!' });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n      setMessage({ type: 'error', text: 'Failed to update profile' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handlePasswordChange = async (e) => {\n    e.preventDefault();\n    \n    if (passwordData.new_password !== passwordData.confirm_password) {\n      setMessage({ type: 'error', text: 'Passwords do not match' });\n      return;\n    }\n    \n    if (passwordData.new_password.length < 8) {\n      setMessage({ type: 'error', text: 'Password must be at least 8 characters long' });\n      return;\n    }\n    \n    try {\n      setSaving(true);\n      await axios.post('/api/users/change-password', {\n        current_password: passwordData.current_password,\n        new_password: passwordData.new_password\n      });\n      setMessage({ type: 'success', text: 'Password changed successfully!' });\n      setPasswordData({\n        current_password: '',\n        new_password: '',\n        confirm_password: ''\n      });\n      setTimeout(() => setMessage({ type: '', text: '' }), 3000);\n    } catch (error) {\n      console.error('Failed to change password:', error);\n      setMessage({ type: 'error', text: error.response?.data?.detail || 'Failed to change password' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const regenerateApiKey = async () => {\n    if (!confirm('Are you sure you want to regenerate your API key? The old key will stop working immediately.')) {\n      return;\n    }\n    \n    try {\n      setSaving(true);\n      const response = await axios.post('/api/users/regenerate-api-key');\n      setProfileData(prev => ({ ...prev, api_key: response.data.api_key }));\n      setMessage({ type: 'success', text: 'API key regenerated successfully!' });\n    } catch (error) {\n      console.error('Failed to regenerate API key:', error);\n      setMessage({ type: 'error', text: 'Failed to regenerate API key' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const copyApiKey = () => {\n    navigator.clipboard.writeText(profileData.api_key);\n    setMessage({ type: 'success', text: 'API key copied to clipboard!' });\n    setTimeout(() => setMessage({ type: '', text: '' }), 2000);\n  };\n\n  const getSubscriptionBadge = () => {\n    const tier = profileData.subscription_tier;\n    if (tier === 'enterprise') {\n      return (\n        <span className=\"px-3 py-1 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-full text-sm font-medium flex items-center gap-1\">\n          <Sparkles className=\"w-4 h-4\" />\n          Enterprise\n        </span>\n      );\n    } else if (tier === 'pro') {\n      return (\n        <span className=\"px-3 py-1 bg-gradient-to-r from-blue-600 to-cyan-600 text-white rounded-full text-sm font-medium\">\n          Pro\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"px-3 py-1 bg-gray-600 text-white rounded-full text-sm font-medium\">\n          Free\n        </span>\n      );\n    }\n  };\n\n  const getApiUsagePercentage = () => {\n    if (profileData.api_calls_limit === 0) return 0;\n    return Math.round((profileData.api_calls_made / profileData.api_calls_limit) * 100);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900\">\n      {/* Navigation Header */}\n      <header className=\"bg-gray-800/50 backdrop-blur-lg border-b border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-4\">\n            <div className=\"flex items-center space-x-6\">\n              <Link to=\"/\" className=\"flex items-center space-x-2\">\n                <Zap className=\"w-8 h-8 text-purple-500\" />\n                <span className=\"text-xl font-bold text-white\">API Orchestrator</span>\n              </Link>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <Link\n                to=\"/\"\n                className=\"flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition\"\n              >\n                <Home className=\"w-5 h-5\" />\n                <span>Home</span>\n              </Link>\n              <Link\n                to=\"/dashboard\"\n                className=\"flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition\"\n              >\n                <LayoutDashboard className=\"w-5 h-5\" />\n                <span>Dashboard</span>\n              </Link>\n              <Link\n                to=\"/billing\"\n                className=\"flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition\"\n              >\n                <CreditCard className=\"w-5 h-5\" />\n                <span>Billing</span>\n              </Link>\n              <Link\n                to=\"/profile\"\n                className=\"flex items-center space-x-2 px-4 py-2 text-purple-400 transition\"\n              >\n                <User className=\"w-5 h-5\" />\n                <span>Profile</span>\n              </Link>\n              <button\n                onClick={() => {\n                  logout();\n                  navigate('/');\n                }}\n                className=\"flex items-center space-x-2 px-4 py-2 text-gray-300 hover:text-white transition\"\n              >\n                <LogOut className=\"w-5 h-5\" />\n                <span>Logout</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-white mb-2\">Account Settings</h1>\n              <p className=\"text-gray-400\">Manage your profile and security settings</p>\n            </div>\n            {getSubscriptionBadge()}\n          </div>\n        </div>\n\n        {/* Alert Messages */}\n        {message.text && (\n          <div className={`mb-6 p-4 rounded-lg flex items-center gap-3 ${\n            message.type === 'success' \n              ? 'bg-green-500/10 border border-green-500/30 text-green-400'\n              : 'bg-red-500/10 border border-red-500/30 text-red-400'\n          }`}>\n            {message.type === 'success' ? (\n              <CheckCircle className=\"w-5 h-5\" />\n            ) : (\n              <AlertCircle className=\"w-5 h-5\" />\n            )}\n            {message.text}\n          </div>\n        )}\n\n        {/* Tabs */}\n        <div className=\"border-b border-gray-700 mb-6\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {['profile', 'security', 'api', 'proxy', 'usage'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm capitalize transition ${\n                  activeTab === tab\n                    ? 'border-purple-500 text-purple-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-300 hover:border-gray-300'\n                }`}\n              >\n                {tab === 'api' ? 'API Settings' : tab === 'proxy' ? 'Proxy Settings' : tab}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"bg-gray-800/50 backdrop-blur rounded-xl border border-gray-700 p-6\">\n          {activeTab === 'profile' && (\n            <form onSubmit={handleProfileUpdate}>\n              <h2 className=\"text-xl font-semibold text-white mb-6 flex items-center\">\n                <User className=\"w-5 h-5 mr-2 text-purple-400\" />\n                Profile Information\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">Full Name</label>\n                  <input\n                    type=\"text\"\n                    value={profileData.name}\n                    onChange={(e) => setProfileData(prev => ({ ...prev, name: e.target.value }))}\n                    className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-purple-500 transition\"\n                    placeholder=\"Enter your full name\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">Email Address</label>\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"email\"\n                      value={profileData.email}\n                      disabled\n                      className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-gray-500 cursor-not-allowed\"\n                    />\n                    <Mail className=\"w-5 h-5 text-gray-500 -ml-10\" />\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-1\">Email cannot be changed</p>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">Company</label>\n                  <input\n                    type=\"text\"\n                    value={profileData.company || ''}\n                    onChange={(e) => setProfileData(prev => ({ ...prev, company: e.target.value }))}\n                    className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-purple-500 transition\"\n                    placeholder=\"Enter your company name\"\n                  />\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">Member Since</label>\n                    <div className=\"flex items-center px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-gray-400\">\n                      <Calendar className=\"w-4 h-4 mr-2\" />\n                      {new Date(profileData.created_at).toLocaleDateString()}\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-400 mb-2\">Last Login</label>\n                    <div className=\"flex items-center px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-gray-400\">\n                      <Clock className=\"w-4 h-4 mr-2\" />\n                      {new Date(profileData.last_login).toLocaleDateString()}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-6\">\n                <button\n                  type=\"submit\"\n                  disabled={saving}\n                  className=\"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\n                >\n                  <Save className=\"w-4 h-4\" />\n                  {saving ? 'Saving...' : 'Save Changes'}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {activeTab === 'security' && (\n            <form onSubmit={handlePasswordChange}>\n              <h2 className=\"text-xl font-semibold text-white mb-6 flex items-center\">\n                <Shield className=\"w-5 h-5 mr-2 text-purple-400\" />\n                Security Settings\n              </h2>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">Current Password</label>\n                  <input\n                    type=\"password\"\n                    value={passwordData.current_password}\n                    onChange={(e) => setPasswordData(prev => ({ ...prev, current_password: e.target.value }))}\n                    className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-purple-500 transition\"\n                    placeholder=\"Enter your current password\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={passwordData.new_password}\n                    onChange={(e) => setPasswordData(prev => ({ ...prev, new_password: e.target.value }))}\n                    className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-purple-500 transition\"\n                    placeholder=\"Enter your new password (min 8 characters)\"\n                    minLength=\"8\"\n                    required\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={passwordData.confirm_password}\n                    onChange={(e) => setPasswordData(prev => ({ ...prev, confirm_password: e.target.value }))}\n                    className=\"w-full px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white focus:outline-none focus:border-purple-500 transition\"\n                    placeholder=\"Confirm your new password\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"bg-yellow-500/10 border border-yellow-500/30 rounded-lg p-4\">\n                  <p className=\"text-yellow-400 text-sm\">\n                    <AlertCircle className=\"w-4 h-4 inline mr-2\" />\n                    Password requirements: At least 8 characters long\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"mt-6\">\n                <button\n                  type=\"submit\"\n                  disabled={saving}\n                  className=\"px-6 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\n                >\n                  <Lock className=\"w-4 h-4\" />\n                  {saving ? 'Changing...' : 'Change Password'}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {activeTab === 'api' && (\n            <div>\n              <h2 className=\"text-xl font-semibold text-white mb-6 flex items-center\">\n                <Key className=\"w-5 h-5 mr-2 text-purple-400\" />\n                API Settings\n              </h2>\n              \n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-400 mb-2\">API Key</label>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"flex-1 px-4 py-2 bg-gray-900/50 border border-gray-700 rounded-lg text-white font-mono text-sm\">\n                      {showApiKey ? profileData.api_key : '••••••••••••••••••••••••••••••••'}\n                    </div>\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowApiKey(!showApiKey)}\n                      className=\"px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition\"\n                    >\n                      {showApiKey ? 'Hide' : 'Show'}\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={copyApiKey}\n                      className=\"px-4 py-2 bg-gray-700 text-gray-300 rounded-lg hover:bg-gray-600 transition\"\n                    >\n                      Copy\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-2\">\n                    Use this API key to authenticate your requests to our API\n                  </p>\n                </div>\n                \n                <div className=\"border-t border-gray-700 pt-6\">\n                  <h3 className=\"text-lg font-medium text-white mb-4\">Regenerate API Key</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">\n                    Generate a new API key. This will immediately invalidate your current key.\n                  </p>\n                  <button\n                    type=\"button\"\n                    onClick={regenerateApiKey}\n                    disabled={saving}\n                    className=\"px-4 py-2 bg-red-600/20 text-red-400 border border-red-500/50 rounded-lg hover:bg-red-600/30 transition disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    Regenerate API Key\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'usage' && (\n            <div>\n              <h2 className=\"text-xl font-semibold text-white mb-6 flex items-center\">\n                <TrendingUp className=\"w-5 h-5 mr-2 text-purple-400\" />\n                Usage Statistics\n              </h2>\n              \n              <div className=\"space-y-6\">\n                <div>\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <span className=\"text-sm font-medium text-gray-400\">API Calls This Month</span>\n                    <span className=\"text-sm text-gray-300\">\n                      {profileData.api_calls_made} / {profileData.api_calls_limit || '∞'}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-700 rounded-full h-3 overflow-hidden\">\n                    <div \n                      className=\"h-full bg-gradient-to-r from-purple-500 to-blue-500 transition-all duration-300\"\n                      style={{ width: `${getApiUsagePercentage()}%` }}\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-2\">\n                    {profileData.api_calls_limit \n                      ? `${100 - getApiUsagePercentage()}% of monthly quota remaining`\n                      : 'Unlimited API calls with your plan'\n                    }\n                  </p>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"bg-gray-900/50 rounded-lg p-4 border border-gray-700\">\n                    <p className=\"text-gray-400 text-sm mb-1\">Total Projects</p>\n                    <p className=\"text-2xl font-bold text-white\">12</p>\n                  </div>\n                  <div className=\"bg-gray-900/50 rounded-lg p-4 border border-gray-700\">\n                    <p className=\"text-gray-400 text-sm mb-1\">APIs Discovered</p>\n                    <p className=\"text-2xl font-bold text-white\">248</p>\n                  </div>\n                  <div className=\"bg-gray-900/50 rounded-lg p-4 border border-gray-700\">\n                    <p className=\"text-gray-400 text-sm mb-1\">Tests Generated</p>\n                    <p className=\"text-2xl font-bold text-white\">1,536</p>\n                  </div>\n                </div>\n                \n                <div className=\"border-t border-gray-700 pt-6\">\n                  <h3 className=\"text-lg font-medium text-white mb-4\">Upgrade Your Plan</h3>\n                  <p className=\"text-gray-400 text-sm mb-4\">\n                    Need more API calls or advanced features? Upgrade to a higher tier.\n                  </p>\n                  <button\n                    onClick={() => navigate('/billing')}\n                    className=\"px-6 py-2 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-lg hover:opacity-90 transition flex items-center gap-2\"\n                  >\n                    <Sparkles className=\"w-4 h-4\" />\n                    View Plans\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'proxy' && (\n            <div>\n              <h2 className=\"text-xl font-semibold text-white mb-6 flex items-center\">\n                <Globe className=\"w-5 h-5 mr-2 text-purple-400\" />\n                Proxy Configuration\n              </h2>\n              \n              <ProxySettings />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;"],"names":["__iconNode","Calendar","createLucideIcon","Key","Monitor","ProxySettings","workspaceId","environmentId","token","useAuth","loading","setLoading","useState","testLoading","setTestLoading","testResult","setTestResult","activeTab","setActiveTab","presets","setPresets","systemProxy","setSystemProxy","proxyConfig","setProxyConfig","bypassInput","setBypassInput","useEffect","loadProxySettings","loadPresets","detectSystemProxy","response","axios","getApiUrl","settings","key","error","saveProxyConfig","endpoint","testProxy","applyPreset","preset","addBypassRule","removeBypassRule","index","newList","_","i","proxyTypes","Globe","Lock","Server","Shield","jsxs","jsx","RefreshCw","Building2","Cloud","prev","Fragment","type","e","Plus","rule","XCircle","CheckCircle","Loader","TestTube","Save","UserProfile","navigate","useNavigate","user","logout","profileData","setProfileData","passwordData","setPasswordData","saving","setSaving","message","setMessage","showApiKey","setShowApiKey","fetchUserProfile","userData","handleProfileUpdate","handlePasswordChange","regenerateApiKey","copyApiKey","getSubscriptionBadge","tier","Sparkles","getApiUsagePercentage","Link","Zap","Home","LayoutDashboard","CreditCard","User","LogOut","AlertCircle","tab","Mail","Clock","TrendingUp"],"mappings":"0oBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,SAAU,IAAK,QAAQ,CAAE,EACvC,CAAC,OAAQ,CAAE,EAAG,UAAW,IAAK,QAAQ,CAAE,EACxC,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,QAAQ,CAAE,EAC9E,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,CAC3C,EACMC,GAAWC,EAAiB,WAAYF,EAAU,ECfxD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,iEAAkE,IAAK,QAAQ,CAAE,EAC/F,CAAC,OAAQ,CAAE,EAAG,gBAAiB,IAAK,QAAQ,CAAE,EAC9C,CAAC,SAAU,CAAE,GAAI,MAAO,GAAI,OAAQ,EAAG,MAAO,IAAK,QAAQ,CAAE,CAC/D,EACMG,EAAMD,EAAiB,MAAOF,EAAU,ECd9C;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,KAAM,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,IAAK,QAAQ,CAAE,EAC9E,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAQ,CAAE,CACpE,EACMI,EAAUF,EAAiB,UAAWF,EAAU,ECehDK,GAAgB,CAAC,CAAE,YAAAC,EAAc,KAAM,cAAAC,EAAgB,QAAW,CACtE,KAAM,CAAE,MAAAC,CAAA,EAAUC,EAAA,EACZ,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,EAAK,EAC9C,CAACG,EAAYC,CAAa,EAAIJ,EAAAA,SAAS,IAAI,EAC3C,CAACK,EAAWC,CAAY,EAAIN,EAAAA,SAAS,QAAQ,EAC7C,CAACO,EAASC,CAAU,EAAIR,EAAAA,SAAS,CAAA,CAAE,EACnC,CAACS,EAAaC,CAAc,EAAIV,EAAAA,SAAS,IAAI,EAG7C,CAACW,EAAaC,CAAc,EAAIZ,WAAS,CAC7C,QAAS,GACT,KAAM,OACN,KAAM,GACN,KAAM,KACN,SAAU,GACV,SAAU,GACV,YAAa,CAAA,EACb,iBAAkB,GAClB,aAAc,GACd,WAAY,GACZ,QAAS,EAAA,CACV,EAEK,CAACa,EAAaC,CAAc,EAAId,EAAAA,SAAS,EAAE,EAEjDe,EAAAA,UAAU,IAAM,CACdC,EAAA,EACAC,EAAA,EACAC,EAAA,CACF,EAAG,CAACb,CAAS,CAAC,EAEd,MAAMW,EAAoB,SAAY,CACpC,GAAI,CACF,MAAMG,EAAW,MAAMC,EAAM,IAC3BC,EAAU,qBAAqB,EAC/B,CAAE,QAAS,CAAE,cAAe,UAAUzB,CAAK,GAAG,CAAE,EAGlD,GAAIuB,EAAS,KAAK,QAAS,CACzB,MAAMG,EAAWH,EAAS,KAAK,SAG/B,GAAId,IAAc,UAAYiB,EAAS,aACrCV,EAAeU,EAAS,YAAY,UAC3BjB,IAAc,aAAeX,EAAa,CACnD,MAAM6B,EAAM,aAAa7B,CAAW,GAChC4B,EAAS,kBAAkBC,CAAG,GAChCX,EAAeU,EAAS,kBAAkBC,CAAG,CAAC,CAElD,SAAWlB,IAAc,eAAiBV,EAAe,CACvD,MAAM4B,EAAM,OAAO5B,CAAa,GAC5B2B,EAAS,oBAAoBC,CAAG,GAClCX,EAAeU,EAAS,oBAAoBC,CAAG,CAAC,CAEpD,CACF,CACF,OAASC,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACvD,CACF,EAEMP,EAAc,SAAY,CAC9B,GAAI,CACF,MAAME,EAAW,MAAMC,EAAM,IAC3BC,EAAU,oBAAoB,EAC9B,CAAE,QAAS,CAAE,cAAe,UAAUzB,CAAK,GAAG,CAAE,EAG9CuB,EAAS,KAAK,SAChBX,EAAWW,EAAS,KAAK,OAAO,CAEpC,OAASK,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,CAChD,CACF,EAEMN,EAAoB,SAAY,CACpC,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAM,IAC3BC,EAAU,0BAA0B,EACpC,CAAE,QAAS,CAAE,cAAe,UAAUzB,CAAK,GAAG,CAAE,EAG9CuB,EAAS,KAAK,SAAWA,EAAS,KAAK,UACzCT,EAAeS,EAAS,KAAK,KAAK,CAEtC,OAASK,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACvD,CACF,EAEMC,EAAkB,SAAY,CAClC1B,EAAW,EAAI,EACf,GAAI,CACF,IAAI2B,EAAW,oBACXrB,IAAc,aAAeX,EAC/BgC,EAAW,wBAAwBhC,CAAW,GACrCW,IAAc,eAAiBV,IACxC+B,EAAW,0BAA0B/B,CAAa,KAGnC,MAAMyB,EAAM,KAC3BC,EAAUK,CAAQ,EAClBf,EACA,CAAE,QAAS,CAAE,cAAe,UAAUf,CAAK,GAAG,CAAE,GAGrC,KAAK,SAChBQ,EAAc,CACZ,QAAS,GACT,QAAS,wCAAA,CACV,CAEL,OAASoB,EAAO,CACdpB,EAAc,CACZ,QAAS,GACT,QAASoB,EAAM,UAAU,MAAM,QAAU,oCAAA,CAC1C,CACH,QAAA,CACEzB,EAAW,EAAK,CAClB,CACF,EAEM4B,EAAY,SAAY,CAC5BzB,EAAe,EAAI,EACnBE,EAAc,IAAI,EAElB,GAAI,CACF,MAAMe,EAAW,MAAMC,EAAM,KAC3BC,EAAU,iBAAiB,EAC3B,CACE,OAAQV,EACR,SAAU,uBAAA,EAEZ,CAAE,QAAS,CAAE,cAAe,UAAUf,CAAK,GAAG,CAAE,EAGlDQ,EAAce,EAAS,KAAK,MAAM,CACpC,OAASK,EAAO,CACdpB,EAAc,CACZ,QAAS,GACT,MAAOoB,EAAM,UAAU,MAAM,QAAU,wBAAA,CACxC,CACH,QAAA,CACEtB,EAAe,EAAK,CACtB,CACF,EAEM0B,EAAeC,GAAW,CAC9BjB,EAAe,CACb,GAAGD,EACH,GAAGkB,EAAO,OACV,YAAaA,EAAO,OAAO,aAAe,CAAA,CAAC,CAC5C,CACH,EAEMC,EAAgB,IAAM,CACtBjB,EAAY,SACdD,EAAe,CACb,GAAGD,EACH,YAAa,CAAC,GAAGA,EAAY,YAAaE,EAAY,MAAM,CAAA,CAC7D,EACDC,EAAe,EAAE,EAErB,EAEMiB,EAAoBC,GAAU,CAClC,MAAMC,EAAUtB,EAAY,YAAY,OAAO,CAACuB,EAAGC,IAAMA,IAAMH,CAAK,EACpEpB,EAAe,CACb,GAAGD,EACH,YAAasB,CAAA,CACd,CACH,EAEMG,EAAa,CACjB,CAAE,MAAO,OAAQ,MAAO,OAAQ,KAAMC,CAAA,EACtC,CAAE,MAAO,QAAS,MAAO,QAAS,KAAMC,CAAA,EACxC,CAAE,MAAO,SAAU,MAAO,SAAU,KAAMC,EAAA,EAC1C,CAAE,MAAO,SAAU,MAAO,SAAU,KAAMC,CAAA,EAC1C,CAAE,MAAO,SAAU,MAAO,SAAU,KAAMhD,CAAA,CAAQ,EAGpD,OACEiD,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACL,EAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAAK,EAAAA,IAAC,KAAA,CAAG,UAAU,gCAAgC,SAAA,sBAAmB,EACjEA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,iDAAA,CAA+C,CAAA,CAAA,CAC9E,CAAA,EACF,EACAD,EAAAA,KAAC,SAAA,CACC,QAASvB,EACT,UAAU,0GAEV,SAAA,CAAAwB,EAAAA,IAACC,EAAA,CAAU,UAAU,SAAA,CAAU,EAC/BD,EAAAA,IAAC,QAAK,SAAA,eAAA,CAAa,CAAA,CAAA,CAAA,CACrB,EACF,EAGAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMpC,EAAa,QAAQ,EACpC,UAAW,wBACTD,IAAc,SACV,2CACA,gCACN,GAEA,SAAAoC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACL,EAAA,CAAM,UAAU,SAAA,CAAU,EAC3BK,EAAAA,IAAC,QAAK,SAAA,QAAA,CAAM,CAAA,CAAA,CACd,CAAA,CAAA,EAEDhD,GACCgD,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMpC,EAAa,WAAW,EACvC,UAAW,wBACTD,IAAc,YACV,2CACA,gCACN,GAEA,SAAAoC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACE,GAAA,CAAU,UAAU,SAAA,CAAU,EAC/BF,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,CAAA,CACjB,CAAA,CAAA,EAGH/C,GACC+C,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMpC,EAAa,aAAa,EACzC,UAAW,wBACTD,IAAc,cACV,2CACA,gCACN,GAEA,SAAAoC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACG,GAAA,CAAM,UAAU,SAAA,CAAU,EAC3BH,EAAAA,IAAC,QAAK,SAAA,aAAA,CAAW,CAAA,CAAA,CACnB,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,EAGCjC,GACCgC,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAC,EAAAA,IAAClD,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7BkD,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,uBAAA,CAAqB,CAAA,EACrD,EACAD,EAAAA,KAAC,IAAA,CAAE,UAAU,6BACV,SAAA,CAAAhC,EAAY,KAAK,YAAA,EAAc,aAAWA,EAAY,KAAK,IAAEA,EAAY,IAAA,EAC5E,EACAiC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM9B,EAAeH,CAAW,EACzC,UAAU,iDACX,SAAA,oBAAA,CAAA,CAED,EACF,EAIFgC,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,gBAAa,EACnEA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBACZ,SAAAnC,EAAQ,MAAM,EAAG,CAAC,EAAE,IAAI,CAACsB,EAAQG,IAChCS,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAMb,EAAYC,CAAM,EACjC,UAAU,oEAEV,SAAA,CAAAa,EAAAA,IAAC,IAAA,CAAE,UAAU,yBAA0B,SAAAb,EAAO,KAAK,EACnDa,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA8B,WAAO,WAAA,CAAY,CAAA,CAAA,EALzDV,CAAA,CAOR,CAAA,CACH,CAAA,EACF,QAGC,MAAA,CAAI,UAAU,6BACb,SAAAS,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,yBAAyB,SAAA,eAAY,EACtDA,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM9B,EAAekC,IAAS,CAAE,GAAGA,EAAM,QAAS,CAACA,EAAK,OAAA,EAAU,EAC3E,UAAW,sEACTnC,EAAY,QAAU,cAAgB,aACxC,GAEA,SAAA+B,EAAAA,IAAC,OAAA,CACC,UAAW,mEACT/B,EAAY,QAAU,gBAAkB,eAC1C,EAAA,CAAA,CACF,CAAA,CACF,EACF,EAECA,EAAY,SACX8B,EAAAA,KAAAM,EAAAA,SAAA,CAEE,SAAA,CAAAN,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAEhE,QACC,MAAA,CAAI,UAAU,iBACZ,SAAAN,EAAW,IAAIY,GACdP,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAM7B,EAAekC,IAAS,CAAE,GAAGA,EAAM,KAAME,EAAK,KAAA,EAAQ,EACrE,UAAW,+DACTrC,EAAY,OAASqC,EAAK,MACtB,yBACA,6CACN,GAEA,SAAA,CAAAN,EAAAA,IAACM,EAAK,KAAL,CAAU,UAAU,SAAA,CAAU,EAC/BN,EAAAA,IAAC,OAAA,CAAM,SAAAM,EAAK,KAAA,CAAM,CAAA,CAAA,EATbA,EAAK,KAAA,CAWb,CAAA,CACH,CAAA,EACF,EAGAP,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO/B,EAAY,KACnB,SAAWsC,GAAMrC,EAAekC,IAAS,CAAE,GAAGA,EAAM,KAAMG,EAAE,OAAO,KAAA,EAAQ,EAC3E,UAAU,4EACV,YAAY,0BACZ,SAAUtC,EAAY,gBAAA,CAAA,CACxB,EACF,SACC,MAAA,CACC,SAAA,CAAA+B,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,OAEhE,EACAA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO/B,EAAY,KACnB,SAAWsC,GAAMrC,MAAwB,CAAE,GAAGkC,EAAM,KAAM,SAASG,EAAE,OAAO,KAAK,GAAI,EACrF,UAAU,4EACV,YAAY,OACZ,SAAUtC,EAAY,gBAAA,CAAA,CACxB,CAAA,CACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAA8B,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAC,EAAAA,IAACnD,EAAA,CAAI,UAAU,uBAAA,CAAwB,EACvCmD,EAAAA,IAAC,QAAA,CAAM,UAAU,oCAAoC,SAAA,iCAAA,CAErD,CAAA,EACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO/B,EAAY,SACnB,SAAWsC,GAAMrC,EAAekC,IAAS,CAAE,GAAGA,EAAM,SAAUG,EAAE,OAAO,KAAA,EAAQ,EAC/E,UAAU,qEACV,YAAY,UAAA,CAAA,EAEdP,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAO/B,EAAY,SACnB,SAAWsC,GAAMrC,EAAekC,IAAS,CAAE,GAAGA,EAAM,SAAUG,EAAE,OAAO,KAAA,EAAQ,EAC/E,UAAU,qEACV,YAAY,UAAA,CAAA,CACd,CAAA,CACF,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAP,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAA,EAAAA,IAAC,SAAM,UAAU,oCAAoC,kDAErD,CAAA,CACF,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAO7B,EACP,SAAWoC,GAAMnC,EAAemC,EAAE,OAAO,KAAK,EAC9C,WAAaA,GAAMA,EAAE,MAAQ,SAAWnB,EAAA,EACxC,UAAU,4EACV,YAAY,qCAAA,CAAA,EAEdY,EAAAA,IAAC,SAAA,CACC,QAASZ,EACT,UAAU,2EAEV,SAAAY,EAAAA,IAACQ,GAAA,CAAK,UAAU,SAAA,CAAU,CAAA,CAAA,CAC5B,EACF,EACCvC,EAAY,YAAY,OAAS,GAChC+B,EAAAA,IAAC,MAAA,CAAI,UAAU,uBACZ,SAAA/B,EAAY,YAAY,IAAI,CAACwC,EAAMnB,IAClCS,EAAAA,KAAC,MAAA,CAEC,UAAU,iEAEV,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAyB,SAAAS,EAAK,EAC9CT,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMX,EAAiBC,CAAK,EACrC,UAAU,kCAEV,SAAAU,EAAAA,IAACU,EAAA,CAAQ,UAAU,SAAA,CAAU,CAAA,CAAA,CAC/B,CAAA,EATKpB,CAAA,CAWR,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,EACF,EAGAS,EAAAA,KAAC,MAAA,CAAI,UAAU,0CACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,oBAAiB,EAEnED,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,wBAAwB,SAAA,kBAAe,EACxDA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS/B,EAAY,aACrB,SAAWsC,GAAMrC,EAAekC,IAAS,CAAE,GAAGA,EAAM,aAAcG,EAAE,OAAO,OAAA,EAAU,EACrF,UAAU,SAAA,CAAA,CACZ,EACF,EAEAR,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,wBAAwB,SAAA,0BAAuB,EAChEA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS/B,EAAY,WACrB,SAAWsC,GAAMrC,EAAekC,IAAS,CAAE,GAAGA,EAAM,WAAYG,EAAE,OAAO,OAAA,EAAU,EACnF,UAAU,SAAA,CAAA,CACZ,EACF,EAEAR,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,wBAAwB,SAAA,oBAAiB,EAC1DA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,MAAO/B,EAAY,QACnB,SAAWsC,GAAMrC,MAAwB,CAAE,GAAGkC,EAAM,QAAS,SAASG,EAAE,OAAO,KAAK,GAAI,EACxF,UAAU,sEAAA,CAAA,CACZ,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CACF,EAGC9C,UACE,MAAA,CAAI,UAAW,kBACdA,EAAW,QACP,6CACA,wCACN,GACE,SAAA,CAAAsC,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAtC,EAAW,cACTkD,EAAA,CAAY,UAAU,yBAAyB,EAEhDX,EAAAA,IAACU,EAAA,CAAQ,UAAU,sBAAA,CAAuB,EAE5CV,EAAAA,IAAC,OAAA,CAAK,UAAWvC,EAAW,QAAU,iBAAmB,eACtD,SAAAA,EAAW,QAAU,8BAAgC,yBAAA,CACxD,CAAA,EACF,EACCA,EAAW,YACVsC,OAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,CAAA,YAC9BtC,EAAW,WAAW,QAAQ,CAAC,EAAE,IAAA,EAC7C,EAEDA,EAAW,OACVuC,EAAAA,IAAC,KAAE,UAAU,4BAA6B,WAAW,KAAA,CAAM,CAAA,EAE/D,EAIFD,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACC,QAASf,EACT,SAAU1B,GAAe,CAACU,EAAY,QACtC,UAAU,2HAET,WACC8B,EAAAA,KAAAM,EAAAA,SAAA,CACE,SAAA,CAAAL,EAAAA,IAACY,EAAA,CAAO,UAAU,sBAAA,CAAuB,EACzCZ,EAAAA,IAAC,QAAK,SAAA,YAAA,CAAU,CAAA,CAAA,CAClB,EAEAD,EAAAA,KAAAM,EAAAA,SAAA,CACE,SAAA,CAAAL,EAAAA,IAACa,GAAA,CAAS,UAAU,SAAA,CAAU,EAC9Bb,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,CAAA,CAAA,CACvB,CAAA,CAAA,EAIJA,EAAAA,IAAC,SAAA,CACC,QAASjB,EACT,SAAU3B,EACV,UAAU,kLAET,WACC2C,EAAAA,KAAAM,EAAAA,SAAA,CACE,SAAA,CAAAL,EAAAA,IAACY,EAAA,CAAO,UAAU,sBAAA,CAAuB,EACzCZ,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,CAAA,CACjB,EAEAD,EAAAA,KAAAM,EAAAA,SAAA,CACE,SAAA,CAAAL,EAAAA,IAACc,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1Bd,EAAAA,IAAC,QAAK,SAAA,oBAAA,CAAkB,CAAA,CAAA,CAC1B,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EACF,CAEJ,EC9hBMe,GAAc,IAAM,CACxB,MAAMC,EAAWC,EAAA,EACX,CAAE,KAAAC,EAAM,OAAAC,CAAA,EAAWhE,EAAA,EACnB,CAACiE,EAAaC,CAAc,EAAI/D,WAAS,CAC7C,KAAM,GACN,MAAO,GACP,QAAS,GACT,QAAS,GACT,kBAAmB,GACnB,WAAY,GACZ,WAAY,GACZ,eAAgB,EAChB,gBAAiB,CAAA,CAClB,EACK,CAACgE,EAAcC,CAAe,EAAIjE,WAAS,CAC/C,iBAAkB,GAClB,aAAc,GACd,iBAAkB,EAAA,CACnB,EACK,CAACF,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACkE,EAAQC,CAAS,EAAInE,EAAAA,SAAS,EAAK,EACpC,CAACoE,EAASC,CAAU,EAAIrE,EAAAA,SAAS,CAAE,KAAM,GAAI,KAAM,GAAI,EACvD,CAACK,EAAWC,CAAY,EAAIN,EAAAA,SAAS,SAAS,EAC9C,CAACsE,EAAYC,CAAa,EAAIvE,EAAAA,SAAS,EAAK,EAElDe,EAAAA,UAAU,IAAM,CACdyD,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,MAAMA,EAAmB,SAAY,CACnC,GAAI,CACFzE,EAAW,EAAI,EAGf,MAAM0E,GADW,MAAMrD,EAAM,IAAI,UAAU,GACjB,KAE1B2C,EAAe,CACb,KAAMU,EAAS,UAAY,GAC3B,MAAOA,EAAS,OAAS,GACzB,QAASA,EAAS,SAAW,GAC7B,QAAS,MAAMA,EAAS,EAAE,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GACrE,kBAAmBA,EAAS,mBAAqB,OACjD,WAAYA,EAAS,YAAc,IAAI,KAAA,EAAO,YAAA,EAC9C,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,eAAgBA,EAAS,sBAAwB,EACjD,gBAAiBA,EAAS,iBAAmB,GAAA,CAC9C,CACH,OAASjD,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAE3CoC,GACFG,EAAe,CACb,KAAMH,EAAK,UAAY,GACvB,MAAOA,EAAK,OAAS,GACrB,QAASA,EAAK,SAAW,GACzB,QAAS,MAAMA,EAAK,EAAE,IAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAAC,GACjE,kBAAmBA,EAAK,mBAAqB,OAC7C,WAAYA,EAAK,YAAc,IAAI,KAAA,EAAO,YAAA,EAC1C,WAAY,IAAI,KAAA,EAAO,YAAA,EACvB,eAAgB,EAChB,gBAAiBA,EAAK,oBAAsBA,EAAK,oBAAsBA,EAAK,qBAAuB,GAAA,CACpG,CAEL,QAAA,CACE7D,EAAW,EAAK,CAClB,CACF,EAEM2E,EAAsB,MAAOzB,GAAM,CACvCA,EAAE,eAAA,EACF,GAAI,CACFkB,EAAU,EAAI,EACd,MAAM/C,EAAM,IAAI,qBAAsB,CACpC,KAAM0C,EAAY,KAClB,QAASA,EAAY,OAAA,CACtB,EACDO,EAAW,CAAE,KAAM,UAAW,KAAM,gCAAiC,EACrE,WAAW,IAAMA,EAAW,CAAE,KAAM,GAAI,KAAM,GAAI,EAAG,GAAI,CAC3D,OAAS7C,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChD6C,EAAW,CAAE,KAAM,QAAS,KAAM,2BAA4B,CAChE,QAAA,CACEF,EAAU,EAAK,CACjB,CACF,EAEMQ,EAAuB,MAAO1B,GAAM,CAGxC,GAFAA,EAAE,eAAA,EAEEe,EAAa,eAAiBA,EAAa,iBAAkB,CAC/DK,EAAW,CAAE,KAAM,QAAS,KAAM,yBAA0B,EAC5D,MACF,CAEA,GAAIL,EAAa,aAAa,OAAS,EAAG,CACxCK,EAAW,CAAE,KAAM,QAAS,KAAM,8CAA+C,EACjF,MACF,CAEA,GAAI,CACFF,EAAU,EAAI,EACd,MAAM/C,EAAM,KAAK,6BAA8B,CAC7C,iBAAkB4C,EAAa,iBAC/B,aAAcA,EAAa,YAAA,CAC5B,EACDK,EAAW,CAAE,KAAM,UAAW,KAAM,iCAAkC,EACtEJ,EAAgB,CACd,iBAAkB,GAClB,aAAc,GACd,iBAAkB,EAAA,CACnB,EACD,WAAW,IAAMI,EAAW,CAAE,KAAM,GAAI,KAAM,GAAI,EAAG,GAAI,CAC3D,OAAS7C,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,EACjD6C,EAAW,CAAE,KAAM,QAAS,KAAM7C,EAAM,UAAU,MAAM,QAAU,4BAA6B,CACjG,QAAA,CACE2C,EAAU,EAAK,CACjB,CACF,EAEMS,EAAmB,SAAY,CACnC,GAAK,QAAQ,8FAA8F,EAI3G,GAAI,CACFT,EAAU,EAAI,EACd,MAAMhD,EAAW,MAAMC,EAAM,KAAK,+BAA+B,EACjE2C,EAAejB,IAAS,CAAE,GAAGA,EAAM,QAAS3B,EAAS,KAAK,SAAU,EACpEkD,EAAW,CAAE,KAAM,UAAW,KAAM,oCAAqC,CAC3E,OAAS7C,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,EACpD6C,EAAW,CAAE,KAAM,QAAS,KAAM,+BAAgC,CACpE,QAAA,CACEF,EAAU,EAAK,CACjB,CACF,EAEMU,EAAa,IAAM,CACvB,UAAU,UAAU,UAAUf,EAAY,OAAO,EACjDO,EAAW,CAAE,KAAM,UAAW,KAAM,+BAAgC,EACpE,WAAW,IAAMA,EAAW,CAAE,KAAM,GAAI,KAAM,GAAI,EAAG,GAAI,CAC3D,EAEMS,EAAuB,IAAM,CACjC,MAAMC,EAAOjB,EAAY,kBACzB,OAAIiB,IAAS,aAETtC,EAAAA,KAAC,OAAA,CAAK,UAAU,6HACd,SAAA,CAAAC,EAAAA,IAACsC,EAAA,CAAS,UAAU,SAAA,CAAU,EAAE,YAAA,EAElC,EAEOD,IAAS,MAEhBrC,EAAAA,IAAC,OAAA,CAAK,UAAU,mGAAmG,SAAA,MAEnH,EAIAA,EAAAA,IAAC,OAAA,CAAK,UAAU,oEAAoE,SAAA,OAEpF,CAGN,EAEMuC,EAAwB,IACxBnB,EAAY,kBAAoB,EAAU,EACvC,KAAK,MAAOA,EAAY,eAAiBA,EAAY,gBAAmB,GAAG,EAGpF,OAAIhE,EAEA4C,MAAC,OAAI,UAAU,4DACb,eAAC,MAAA,CAAI,UAAU,mEAAmE,CAAA,CACpF,EAKFD,EAAAA,KAAC,MAAA,CAAI,UAAU,2BAEb,SAAA,CAAAC,EAAAA,IAAC,SAAA,CAAO,UAAU,2DAChB,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAD,OAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8BACb,SAAAD,EAAAA,KAACyC,GAAK,GAAG,IAAI,UAAU,8BACrB,SAAA,CAAAxC,EAAAA,IAACyC,GAAA,CAAI,UAAU,yBAAA,CAA0B,EACzCzC,EAAAA,IAAC,OAAA,CAAK,UAAU,+BAA+B,SAAA,kBAAA,CAAgB,CAAA,CAAA,CACjE,CAAA,CACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAACyC,EAAA,CACC,GAAG,IACH,UAAU,kFAEV,SAAA,CAAAxC,EAAAA,IAAC0C,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1B1C,EAAAA,IAAC,QAAK,SAAA,MAAA,CAAI,CAAA,CAAA,CAAA,EAEZD,EAAAA,KAACyC,EAAA,CACC,GAAG,aACH,UAAU,kFAEV,SAAA,CAAAxC,EAAAA,IAAC2C,GAAA,CAAgB,UAAU,SAAA,CAAU,EACrC3C,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,CAAA,CAAA,CAAA,EAEjBD,EAAAA,KAACyC,EAAA,CACC,GAAG,WACH,UAAU,kFAEV,SAAA,CAAAxC,EAAAA,IAAC4C,GAAA,CAAW,UAAU,SAAA,CAAU,EAChC5C,EAAAA,IAAC,QAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,EAEfD,EAAAA,KAACyC,EAAA,CACC,GAAG,WACH,UAAU,mEAEV,SAAA,CAAAxC,EAAAA,IAAC6C,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1B7C,EAAAA,IAAC,QAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,EAEfD,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM,CACboB,EAAA,EACAH,EAAS,GAAG,CACd,EACA,UAAU,kFAEV,SAAA,CAAAhB,EAAAA,IAAC8C,GAAA,CAAO,UAAU,SAAA,CAAU,EAC5B9C,EAAAA,IAAC,QAAK,SAAA,QAAA,CAAM,CAAA,CAAA,CAAA,CACd,CAAA,CACF,CAAA,CAAA,CACF,EACF,EACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BAEb,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,qCAAqC,SAAA,mBAAgB,EACnEA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,2CAAA,CAAyC,CAAA,EACxE,EACCoC,EAAA,CAAqB,CAAA,CACxB,CAAA,CACF,EAGCV,EAAQ,MACP3B,EAAAA,KAAC,MAAA,CAAI,UAAW,+CACd2B,EAAQ,OAAS,UACb,4DACA,qDACN,GACG,SAAA,CAAAA,EAAQ,OAAS,UAChB1B,EAAAA,IAACW,EAAA,CAAY,UAAU,UAAU,EAEjCX,EAAAA,IAAC+C,EAAA,CAAY,UAAU,SAAA,CAAU,EAElCrB,EAAQ,IAAA,EACX,QAID,MAAA,CAAI,UAAU,gCACb,SAAA1B,EAAAA,IAAC,OAAI,UAAU,wBACZ,SAAA,CAAC,UAAW,WAAY,MAAO,QAAS,OAAO,EAAE,IAAKgD,GACrDhD,EAAAA,IAAC,SAAA,CAEC,QAAS,IAAMpC,EAAaoF,CAAG,EAC/B,UAAW,kEACTrF,IAAcqF,EACV,oCACA,4EACN,GAEC,SAAAA,IAAQ,MAAQ,eAAiBA,IAAQ,QAAU,iBAAmBA,CAAA,EARlEA,CAAA,CAUR,EACH,CAAA,CACF,EAGAjD,EAAAA,KAAC,MAAA,CAAI,UAAU,qEACZ,SAAA,CAAApC,IAAc,WACboC,OAAC,OAAA,CAAK,SAAUiC,EACd,SAAA,CAAAjC,EAAAA,KAAC,KAAA,CAAG,UAAU,0DACZ,SAAA,CAAAC,EAAAA,IAAC6C,EAAA,CAAK,UAAU,8BAAA,CAA+B,EAAE,qBAAA,EAEnD,EAEA9C,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,YAAS,EACzEA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoB,EAAY,KACnB,SAAWb,GAAMc,EAAejB,IAAS,CAAE,GAAGA,EAAM,KAAMG,EAAE,OAAO,KAAA,EAAQ,EAC3E,UAAU,qIACV,YAAY,sBAAA,CAAA,CACd,EACF,SAEC,MAAA,CACC,SAAA,CAAAP,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,gBAAa,EAC7ED,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,MAAOoB,EAAY,MACnB,SAAQ,GACR,UAAU,oGAAA,CAAA,EAEZpB,EAAAA,IAACiD,GAAA,CAAK,UAAU,8BAAA,CAA+B,CAAA,EACjD,EACAjD,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,yBAAA,CAAuB,CAAA,EACnE,SAEC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,UAAO,EACvEA,EAAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOoB,EAAY,SAAW,GAC9B,SAAWb,GAAMc,EAAejB,IAAS,CAAE,GAAGA,EAAM,QAASG,EAAE,OAAO,KAAA,EAAQ,EAC9E,UAAU,qIACV,YAAY,yBAAA,CAAA,CACd,EACF,EAEAR,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,eAAY,EAC5ED,EAAAA,KAAC,MAAA,CAAI,UAAU,6FACb,SAAA,CAAAC,EAAAA,IAACrD,GAAA,CAAS,UAAU,cAAA,CAAe,EAClC,IAAI,KAAKyE,EAAY,UAAU,EAAE,mBAAA,CAAmB,CAAA,CACvD,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAApB,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,aAAU,EAC1ED,EAAAA,KAAC,MAAA,CAAI,UAAU,6FACb,SAAA,CAAAC,EAAAA,IAACkD,GAAA,CAAM,UAAU,cAAA,CAAe,EAC/B,IAAI,KAAK9B,EAAY,UAAU,EAAE,mBAAA,CAAmB,CAAA,CACvD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEApB,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,SAAUyB,EACV,UAAU,uJAEV,SAAA,CAAAxB,EAAAA,IAACc,EAAA,CAAK,UAAU,SAAA,CAAU,EACzBU,EAAS,YAAc,cAAA,CAAA,CAAA,CAC1B,CACF,CAAA,EACF,EAGD7D,IAAc,YACboC,OAAC,OAAA,CAAK,SAAUkC,EACd,SAAA,CAAAlC,EAAAA,KAAC,KAAA,CAAG,UAAU,0DACZ,SAAA,CAAAC,EAAAA,IAACF,EAAA,CAAO,UAAU,8BAAA,CAA+B,EAAE,mBAAA,EAErD,EAEAC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,mBAAgB,EAChFA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOsB,EAAa,iBACpB,SAAWf,GAAMgB,EAAgBnB,IAAS,CAAE,GAAGA,EAAM,iBAAkBG,EAAE,OAAO,KAAA,EAAQ,EACxF,UAAU,qIACV,YAAY,8BACZ,SAAQ,EAAA,CAAA,CACV,EACF,SAEC,MAAA,CACC,SAAA,CAAAP,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,eAAY,EAC5EA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOsB,EAAa,aACpB,SAAWf,GAAMgB,EAAgBnB,IAAS,CAAE,GAAGA,EAAM,aAAcG,EAAE,OAAO,KAAA,EAAQ,EACpF,UAAU,qIACV,YAAY,6CACZ,UAAU,IACV,SAAQ,EAAA,CAAA,CACV,EACF,SAEC,MAAA,CACC,SAAA,CAAAP,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,uBAAoB,EACpFA,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,MAAOsB,EAAa,iBACpB,SAAWf,GAAMgB,EAAgBnB,IAAS,CAAE,GAAGA,EAAM,iBAAkBG,EAAE,OAAO,KAAA,EAAQ,EACxF,UAAU,qIACV,YAAY,4BACZ,SAAQ,EAAA,CAAA,CACV,EACF,QAEC,MAAA,CAAI,UAAU,8DACb,SAAAR,EAAAA,KAAC,IAAA,CAAE,UAAU,0BACX,SAAA,CAAAC,EAAAA,IAAC+C,EAAA,CAAY,UAAU,qBAAA,CAAsB,EAAE,mDAAA,CAAA,CAEjD,CAAA,CACF,CAAA,EACF,EAEA/C,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAD,EAAAA,KAAC,SAAA,CACC,KAAK,SACL,SAAUyB,EACV,UAAU,uJAEV,SAAA,CAAAxB,EAAAA,IAACJ,EAAA,CAAK,UAAU,SAAA,CAAU,EACzB4B,EAAS,cAAgB,iBAAA,CAAA,CAAA,CAC5B,CACF,CAAA,EACF,EAGD7D,IAAc,OACboC,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,0DACZ,SAAA,CAAAC,EAAAA,IAACnD,EAAA,CAAI,UAAU,8BAAA,CAA+B,EAAE,cAAA,EAElD,EAEAkD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,UAAO,EACvED,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,MAAC,OAAI,UAAU,iGACZ,SAAA4B,EAAaR,EAAY,QAAU,mCACtC,EACApB,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAAS,IAAM6B,EAAc,CAACD,CAAU,EACxC,UAAU,8EAET,WAAa,OAAS,MAAA,CAAA,EAEzB5B,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASmC,EACT,UAAU,8EACX,SAAA,MAAA,CAAA,CAED,EACF,EACAnC,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,2DAAA,CAE1C,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,qBAAkB,EACtEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,6EAE1C,EACAA,EAAAA,IAAC,SAAA,CACC,KAAK,SACL,QAASkC,EACT,SAAUV,EACV,UAAU,0JACX,SAAA,oBAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGD7D,IAAc,SACboC,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,0DACZ,SAAA,CAAAC,EAAAA,IAACmD,GAAA,CAAW,UAAU,8BAAA,CAA+B,EAAE,kBAAA,EAEzD,EAEApD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,oCAAoC,SAAA,uBAAoB,EACxED,EAAAA,KAAC,OAAA,CAAK,UAAU,wBACb,SAAA,CAAAqB,EAAY,eAAe,MAAIA,EAAY,iBAAmB,GAAA,CAAA,CACjE,CAAA,EACF,EACApB,EAAAA,IAAC,MAAA,CAAI,UAAU,sDACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,kFACV,MAAO,CAAE,MAAO,GAAGuC,EAAA,CAAuB,GAAA,CAAI,CAAA,EAElD,EACAvC,EAAAA,IAAC,IAAA,CAAE,UAAU,6BACV,SAAAoB,EAAY,gBACT,GAAG,IAAMmB,EAAA,CAAuB,+BAChC,oCAAA,CAEN,CAAA,EACF,EAEAxC,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,iBAAc,EACxDA,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,IAAA,CAAE,CAAA,EACjD,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,kBAAe,EACzDA,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,KAAA,CAAG,CAAA,EAClD,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,kBAAe,EACzDA,EAAAA,IAAC,IAAA,CAAE,UAAU,gCAAgC,SAAA,OAAA,CAAK,CAAA,CAAA,CACpD,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gCACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,oBAAiB,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,sEAE1C,EACAD,EAAAA,KAAC,SAAA,CACC,QAAS,IAAMiB,EAAS,UAAU,EAClC,UAAU,mIAEV,SAAA,CAAAhB,EAAAA,IAACsC,EAAA,CAAS,UAAU,SAAA,CAAU,EAAE,YAAA,CAAA,CAAA,CAElC,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGD3E,IAAc,SACboC,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,0DACZ,SAAA,CAAAC,EAAAA,IAACL,EAAA,CAAM,UAAU,8BAAA,CAA+B,EAAE,qBAAA,EAEpD,QAEC5C,GAAA,CAAA,CAAc,CAAA,CAAA,CACjB,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EACF,CAEJ","x_google_ignoreList":[0,1,2]}